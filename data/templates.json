{
  "frameworks": {
    "node": [
      "# Dependencies",
      "node_modules/",
      "jspm_packages/",
      "bower_components/",
      "# Logs",
      "logs",
      "*.log",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      "lerna-debug.log*",
      ".pnpm-debug.log*",
      "# Diagnostic reports",
      "report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "# Runtime data",
      "pids",
      "*.pid",
      "*.seed",
      "*.pid.lock",
      "# Environment",
      ".env",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local",
      ".env.local",
      "# Package management",
      ".npm",
      "package-lock.json",
      "yarn.lock",
      ".yarn-integrity",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      ".pnp.*",
      "# Coverage & Test",
      "coverage/",
      "lib-cov",
      "*.lcov",
      ".nyc_output",
      "# Build output",
      "dist/",
      "build/",
      ".next/",
      "out/",
      ".nuxt",
      ".output",
      "# Cache & Temporary",
      ".cache/",
      ".temp/",
      ".grunt",
      ".lock-wscript",
      ".fusebox/",
      ".dynamodb/",
      ".tern-port",
      ".vscode-test",
      ".node_repl_history",
      ".webpack/",
      "# TypeScript",
      "*.tsbuildinfo",
      "# Optional REPL history",
      ".node_repl_history"
    ],
    "react": [
      "build/",
      ".env.local",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*"
    ],
    "python": [
      "__pycache__/",
      "*.py[cod]",
      "*$py.class",
      "*.so",
      ".Python",
      "build/",
      "develop-eggs/",
      "dist/",
      "downloads/",
      "eggs/",
      ".eggs/",
      "lib/",
      "lib64/",
      "parts/",
      "sdist/",
      "var/",
      "wheels/",
      "*.egg-info/",
      ".installed.cfg",
      "*.egg",
      ".env",
      ".venv",
      "env/",
      "venv/",
      "ENV/",
      ".pytest_cache/",
      ".coverage",
      "htmlcov/"
    ],
    "java": [
      "*.class",
      "*.log",
      "*.ctxt",
      ".mtj.tmp/",
      "*.jar",
      "*.war",
      "*.nar",
      "*.ear",
      "*.zip",
      "*.tar.gz",
      "*.rar",
      "hs_err_pid*",
      ".classpath",
      ".project",
      ".settings/",
      "target/",
      "bin/",
      "build/"
    ],
    "angular": [
      "dist/",
      "tmp/",
      "out-tsc/",
      "bazel-out",
      "node_modules/",
      "npm-debug.log",
      "yarn-error.log",
      ".idea/",
      ".project",
      ".classpath",
      ".c9/",
      "*.launch",
      ".settings/",
      "*.sublime-workspace",
      ".vscode/*",
      "!.vscode/settings.json",
      "!.vscode/tasks.json",
      "!.vscode/launch.json",
      "!.vscode/extensions.json",
      ".history/*"
    ],
    "vue": [
      ".DS_Store",
      "node_modules",
      "dist",
      "dist-ssr",
      "coverage",
      "*.local",
      "/cypress/videos/",
      "/cypress/screenshots/",
      ".env.local",
      ".env.*.local",
      "*.log"
    ],
    "django": [
      "*.log",
      "*.pot",
      "*.pyc",
      "__pycache__/",
      "local_settings.py",
      "db.sqlite3",
      "db.sqlite3-journal",
      "media",
      "*.py[cod]",
      "*$py.class",
      ".env",
      ".venv",
      "env/",
      "venv/",
      "ENV/",
      "static/",
      "migrations/"
    ],
    "dotnet": [
      "bin/",
      "obj/",
      "*.user",
      "*.userosscache",
      "*.sln.docstates",
      ".vs/",
      "*_i.c",
      "*_p.c",
      "*.ncb",
      "*.suo",
      "*.tlb",
      "*.tlh",
      "*.bak",
      "*.cache",
      "*.ilk",
      "*.log",
      "*.lib",
      "*.sbr",
      "*.sdf",
      "packages/",
      "TestResults/",
      "[Bb]in/",
      "[Dd]ebug/",
      "[Rr]elease/"
    ],
    "flutter": [
      "build/",
      ".dart_tool/",
      ".flutter-plugins",
      ".flutter-plugins-dependencies",
      ".packages",
      ".pub-cache/",
      ".pub/",
      "/build/",
      "*.lock",
      "*.log",
      "*.pyc",
      "*.swp",
      ".DS_Store",
      ".atom/",
      ".buildlog/",
      ".history",
      ".svn/",
      "*.iml",
      "*.iws",
      ".idea/"
    ],
    "laravel": [
      "/node_modules",
      "/public/hot",
      "/public/storage",
      "/storage/*.key",
      "/vendor",
      ".env",
      ".env.backup",
      ".phpunit.result.cache",
      "Homestead.json",
      "Homestead.yaml",
      "npm-debug.log",
      "yarn-error.log",
      "*.sqlite",
      ".idea",
      ".vscode"
    ],
    "flask": [
      "# Flask specific files",
      "__pycache__/",
      "*.pyc",
      "*.pyo",
      "*.pyd",
      ".env",
      ".venv/",
      "instance/",
      "migrations/"
    ],
    "ruby_on_rails": [
      "# Ruby on Rails specific files",
      "/log/",
      "/tmp/",
      "/db/*.sqlite3",
      "/db/*.sqlite3-journal",
      "/public/system/",
      "/public/uploads/",
      ".env"
    ],
    "spring": [
      "# Spring specific files",
      "*.class",
      "*.war",
      "*.ear",
      ".gradle/",
      "build/",
      "target/",
      ".idea/",
      "*.iml"
    ],
    "asp_net": [
      "# ASP.NET specific files",
      "bin/",
      "obj/",
      "*.user",
      "*.suo",
      "*.pdb",
      "*.cache",
      "*.log"
    ],
    "svelte": [
      "# Svelte specific files",
      "node_modules/",
      "build/",
      ".cache/",
      "*.log"
    ],
    "next_js": [
      "# Next.js specific files",
      ".next/",
      ".env.local",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local"
    ],
    "express": [
      "# Express.js specific files",
      "node_modules/",
      "logs/",
      "*.log",
      ".env"
    ],
    "meteor": [
      "# Meteor.js specific files",
      ".meteor/local/",
      "node_modules/",
      ".npm/"
    ],
    "nuxt_js": [
      "# Nuxt.js specific files",
      ".nuxt/",
      "node_modules/",
      ".env"
    ],
    "tensorflow": [
      "# TensorFlow specific files",
      "__pycache__/",
      "*.pyc",
      "*.pyo",
      "*.pyd"
    ],
    "javascript": [
      "# JavaScript specific files",
      "node_modules/",
      "*.log",
      "npm-debug.log*",
      "yarn-debug.log*",
      ".env",
      ".cache/",
      "dist/",
      "coverage/"
    ],
    "html": [
      "# HTML specific files",
      "*.html",
      "*.htm",
      ".DS_Store"
    ],
    "css": [
      "# CSS specific files",
      "*.css.map",
      ".sass-cache/",
      "*.scssc"
    ],
    "sql": [
      "# SQL specific files",
      "*.sql.bak",
      "*.sql~"
    ],
    "typescript": [
      "# TypeScript specific files",
      "*.tsbuildinfo",
      "node_modules/",
      ".env",
      "dist/"
    ],
    "bash": [
      "# Bash specific files",
      "*.sh~",
      "*.bash_history"
    ],
    "shell": [
      "# Shell specific files",
      "*.sh~",
      "*.shell_history"
    ],
    "csharp": [
      "# C# specific files",
      "bin/",
      "obj/",
      "*.user",
      "*.suo"
    ],
    "c": [
      "# C specific files",
      "*.o",
      "*.out",
      "*.a"
    ],
    "cpp": [
      "# C++ specific files",
      "*.o",
      "*.out",
      "*.a"
    ],
    "php": [
      "# PHP specific files",
      ".env",
      "vendor/",
      "composer.lock"
    ],
    "powershell": [
      "# PowerShell specific files",
      "*.ps1~"
    ],
    "go": [
      "# Go specific files",
      "*.exe",
      "*.test",
      "vendor/"
    ],
    "rust": [
      "# Rust specific files",
      "/target/",
      "**/*.rs.bk"
    ],
    "kotlin": [
      "# Kotlin specific files",
      "/build/",
      "/out/"
    ],
  "lua": [
      "# Lua specific files",
      "*.luac",
      "*.out",
      "*.log",
      ".DS_Store"
    ],
    "dart": [
      "# Dart specific files",
      ".dart_tool/",
      "packages/",
      "*.lock",
      ".pub/"
    ],
    "assembly": [
      "# Assembly specific files",
      "*.o",
      "*.lst",
      "*.map",
      "*.bin"
    ],
    "ruby": [
      "# Ruby specific files",
      "/log/",
      "/tmp/",
      "/.bundle/",
      "/vendor/bundle/",
      ".env"
    ],
    "swift": [
      "# Swift specific files",
      "build/",
      "DerivedData/",
      "*.xcodeproj/*",
      "*.xcworkspace/*"
    ],
    "r": [
      "# R specific files",
      ".Rhistory",
      ".RData",
      ".Rproj.user/"
    ],
    "visual_basic": [
      "# Visual Basic specific files",
      "*.exe",
      "*.dll",
      "*.pdb",
      "obj/",
      "bin/"
    ],
    "matlab": [
      "# MATLAB specific files",
      "*.asv",
      "*.m~",
      "*.mlx~"
    ],
    "vba": [
      "# VBA specific files",
      "*.bas~",
      "*.cls~",
      "*.frm~"
    ],
    "groovy": [
      "# Groovy specific files",
      ".gradle/",
      "build/",
      "*.class"
    ],
    "scala": [
      "# Scala specific files",
      ".idea/",
      ".metals/",
      ".bloop/",
      ".ammonite/"
    ],
    "perl": [
      "# Perl specific files",
      "*.pl~",
      "*.pm~",
      ".build/"
    ],
    "gdscript": [
      "# GDScript (Godot) specific files",
      ".godot/",
      ".import/",
      "*.cfg",
      "*.import",
      "export_presets.cfg"
    ],
    "objective_c": [
      "# Objective-C specific files",
      "*.o",
      "*.d",
      "*.obj",
      "*.exe",
      "*.dll",
      "*.app/",
      "*.ipa/",
      "build/"
    ],
    "elixir": [
      "# Elixir specific files",
      "_build/",
      "deps/",
      "*.beam"
    ],
    "haskell": [
      "# Haskell specific files",
      "dist-newstyle/",
      ".stack-work/",
      "*.hi",
      "*.o"
    ],
    "delphi": [
      "# Delphi specific files",
      "__history/",
      "*.dcu",
      "*.bpl",
      "*.dcp",
      "Win32/Debug/",
      "Win32/Release/"
    ],
    "micropython": [
      "# MicroPython specific files",
      "__pycache__/",
      "*.mpy"
    ],
    "lisp": [
      "# Lisp specific files",
      "*~",
      "*.fasl",
      "*.ufasl",
      ".cache/"
    ],
    "clojure": [
      "# Clojure specific files",
      ".lein-repl-history",
      ".nrepl-port",
      "target/"
    ],
    "julia": [
      "# Julia specific files",
      ".julia_history",
      ".julia_env/",
      ".vscode/"
    ],
    "zig": [
      "# Zig specific files",
      "zig-cache/",
      "zig-out/"
    ],
    "fortran": [
      "# Fortran specific files",
      "*.mod",
      "*.o"
    ],
    "solidity": [
      "# Solidity specific files",
      "cache/",
      "artifacts/",
      "*.bin",
      "*.abi",
      ".env"
    ],
    "ada": [
      "# Ada specific files",
      "*.ali",
      "*.o",
      "*.exe"
    ],
    "erlang": [
      "# Erlang specific files",
      "*.beam",
      "*.dump",
      "ebin/",
      "_build/",
      "rebar.lock"
    ],
    "fsharp": [
      "# F# specific files",
      "*.dll",
      "*.exe",
      "*.pdb",
      "obj/",
      "bin/"
    ],
    "apex": [
      "# Apex specific files",
      ".sfdx/",
      "*.log",
      ".vscode/",
      ".env"
    ],
    "prolog": [
      "# Prolog specific files",
      "*.pl~",
      "*.pro~",
      ".swp"
    ],
    "ocaml": [
      "# OCaml specific files",
      "_build/",
      "*.cmx",
      "*.cmi",
      "*.o"
    ],
    "cobol": [
      "# COBOL specific files",
      "*.lst",
      "*.o",
      "*.int"
    ],
    "crystal": [
      "# Crystal specific files",
      ".crystal/",
      ".shards/",
      "*.dwarf"
    ],
    "nim": [
      "# Nim specific files",
      "nimcache/",
      "*.exe",
      "*.dll"
    ],
    "zephyr": [
      "# Zephyr specific files (embedded development)",
      "build/",
      ".config"
    ]
  },
  "os": {
    "macos": [
      ".DS_Store",
      ".AppleDouble",
      ".LSOverride",
      "Icon",
      "._*",
      ".DocumentRevisions-V100",
      ".fseventsd",
      ".Spotlight-V100",
      ".TemporaryItems",
      ".Trashes",
      ".VolumeIcon.icns",
      ".com.apple.timemachine.donotpresent",
      ".AppleDB",
      ".AppleDesktop",
      "Network Trash Folder",
      "Temporary Items",
      ".apdisk",
      "*.icloud"
    ],
    "windows": [
      "Thumbs.db",
      "Thumbs.db:encryptable",
      "ehthumbs.db",
      "ehthumbs_vista.db",
      "*.stackdump",
      "[Dd]esktop.ini",
      "$RECYCLE.BIN/",
      "*.cab",
      "*.msi",
      "*.msix",
      "*.msm",
      "*.msp",
      "*.lnk"
    ],
    "linux": [
      "*~",
      ".fuse_hidden*",
      ".directory",
      ".Trash-*",
      ".nfs*",
      ".swap",
      ".swp",
      ".swo",
      ".swn"
    ]
  },
  "environment_specific_files": {
    "docker": [
      "# Common directories to exclude",
      "node_modules/",
      "bower_components/",
      "target/",
      "dist/",
      "build/",
      ".cache/",
  
      "# Log files",
      "*.log",
      "logs/",
  
      "# Git-related files",
      ".git/",
      ".gitignore",
  
      "# Environment files",
      ".env",
      ".env.*",
  
      "# Temporary files",
      "*.tmp",
      "*.swp",
  
      "# IDE-specific files",
      ".idea/",
      ".vscode/",
  
      "# Docker-specific files",
      "Dockerfile.*",
      "docker-compose.override.yml",
  
      "# CI/CD-related files",
      ".dockerignore"
],
    "kubernetes": [
      "# Kubernetes configuration files",
      "*.yaml", 
      "*.yml",
  
      "# Helm-related files (if using Helm)",
      "charts/",
      "templates/",
      "*.tgz",
  
      "# Kustomize-related files (if using Kustomize)",
      "kustomization.yaml",
  
      "# Secrets and sensitive data",
      "*.secret.yaml",
      "*.config.yaml",
  
      "# Logs and temporary files",
      "*.log",
      "*.tmp"
  ],
    "terraform": [
      "# Terraform state files",
      "*.tfstate",
      "*.tfstate.backup",
  
      "# Crash logs generated by Terraform",
      "crash.log",
  
      "# Terraform plan output file",
      "*.tfplan",
  
      "# Sensitive variable definitions (if any)",
      "*.auto.tfvars",
  
      "# Terraform working directory",
      ".terraform/",
      
      "# Lock file for provider versions",
      ".terraform.lock.hcl"
]
},
  "editors": {
    "vim": [
        "# Vim temporary files",
        "*.swp",
        "*.swo",
        "*.swn",
        "*.swm",
        "*.swl",
        "*.un~",
        "*~",
        ".netrwhist",
        "Session.vim",
        "Sessionx.vim",
        ".vim/",
        "*.vim.old",
        ".viminfo",
        ".vimrc.local",
        ".nvimlog",
        ".undo/",
        ".backup/",
        ".swap/"
    ],
    "clion": [
        "# CLion",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        "cmake-build-*/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/misc.xml",
        ".idea/modules.xml",
        ".idea/vcs.xml",
        ".idea/deployment.xml",
        ".idea/remote-targets.xml"
    ],
    "phpstorm": [
        "# PHPStorm",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/php.xml",
        ".idea/phpunit.xml",
        ".idea/composerJson.xml",
        ".idea/php-test-framework.xml",
        ".idea/php-docker-settings.xml"
    ],
    "emacs": [
        "# Emacs temporary files",
        "*~",
        "*#",
        ".#*",
        "*.elc",
        "auto-save-list",
        "tramp",
        ".org-id-locations",
        "*_archive",
        "*_flymake.*",
        "*.rel",
        ".cask/",
        "dist/",
        "flycheck_*.el",
        ".projectile",
        ".dir-locals.el",
        "/.emacs.desktop",
        "/.emacs.desktop.lock",
        "*.elc",
        "auto-save-list",
        ".\#*",
        ".eshell/",
        "/.sx/",
        "*.eld",
        "/.emacs.d/",
        "/.emacs.d/elpa/",
        "/.emacs.d/auto-save-list/",
        "/.emacs.d/backups/"
    ],
    "nano": [
        "# Nano temporary files",
        "*.save",
        "*.save.*",
        "*.swp",
        "*.swx",
        "*.tmp",
        "*.nano",
        "*~",
        ".nano.save",
        ".nano.save.*",
        "recovery/*"
    ],
    "vscode": [
        "# Visual Studio Code",
        ".vscode/*",
        "!.vscode/settings.json",
        "!.vscode/tasks.json",
        "!.vscode/launch.json",
        "!.vscode/extensions.json",
        "!.vscode/*.code-snippets",
        ".history/",
        "*.vsix",
        ".ionide",
        ".vs/",
        "*.code-workspace",
        ".vscode-test",
        ".vscodeignore"
    ],
    "visual_studio": [
        "# Visual Studio",
        ".vs/",
        "*.suo",
        "*.user",
        "*.userosscache",
        "*.sln.docstates",
        "[Dd]ebug/",
        "[Dd]ebugPublic/",
        "[Rr]elease/",
        "[Rr]eleases/",
        "x64/",
        "x86/",
        "build/",
        "bld/",
        "[Bb]in/",
        "[Oo]bj/",
        "[Ll]og/",
        ".vs/",
        "*.VisualState.xml",
        "TestResult.xml",
        "[Tt]est[Rr]esult*/",
        "[Bb]uild[Ll]og.*",
        "*.VisualState.xml",
        "*.psess",
        "*.vsp",
        "*.vspx",
        "*.sap",
        "ipch/",
        "*.aps",
        "*.ncb",
        "*.opendb",
        "*.opensdf",
        "*.sdf",
        "*.cachefile",
        "*.VC.db",
        "*.VC.VC.opendb",
        "*.coverage",
        "*.coveragexml",
        "_UpgradeReport_Files/",
        "Backup*/",
        "UpgradeLog*.XML",
        "UpgradeLog*.htm"
    ],
    "sublime": [
        "# Sublime Text",
        "*.tmlanguage.cache",
        "*.tmPreferences.cache",
        "*.stTheme.cache",
        "*.sublime-workspace",
        "*.sublime-project",
        "*.sublime-settings",
        "sftp-config.json",
        "Package Control.last-run",
        "Package Control.ca-list",
        "Package Control.ca-bundle",
        "Package Control.system-ca-bundle",
        "Package Control.cache/",
        "Package Control.ca-certs/",
        "Package Control.merged-ca-bundle",
        "Package Control.user-ca-bundle",
        "oscrypto-ca-bundle.crt",
        "bh_unicode_properties.cache",
        "GitHub.sublime-settings"
    ],
    "intellij": [
        "# IntelliJ IDEA and Other JetBrains IDEs",
        ".idea/",
        "*.iml",
        "*.iws",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/shelf/",
        ".idea/contentModel.xml",
        ".idea/dataSources/",
        ".idea/dataSources.xml",
        ".idea/dataSources.ids",
        ".idea/dataSources.local.xml",
        ".idea/sqlDataSources.xml",
        ".idea/dynamic.xml",
        ".idea/uiDesigner.xml",
        ".idea/gradle.xml",
        ".idea/libraries",
        ".idea/mongoSettings.xml",
        ".idea/httpRequests",
        ".idea/caches/",
        ".idea/modules.xml",
        ".idea/compiler.xml",
        ".idea/jarRepositories.xml",
        ".idea/artifacts",
        ".idea/sonarlint/",
        "*.iml.bak",
        "*.ipr.bak",
        "*.iws.bak",
        ".idea_backup/",
        ".idea/replstate.xml",
        ".idea/checkstyle-idea.xml",
        ".idea/encodings.xml",
        ".idea/misc.xml",
        ".idea/vcs.xml",
        ".idea/jsLibraryMappings.xml",
        ".idea/assetWizardSettings.xml",
        ".idea/kotlinc.xml",
        ".idea/inspectionProfiles/"
    ],
    "eclipse": [
        "# Eclipse",
        ".metadata",
        "bin/",
        "tmp/",
        "*.tmp",
        "*.bak",
        "*.swp",
        "*~.nib",
        "local.properties",
        ".settings/",
        ".loadpath",
        ".recommenders",
        ".project",
        ".externalToolBuilders/",
        "*.launch",
        ".classpath",
        ".factorypath",
        ".buildpath",
        ".target",
        ".tern-project",
        ".springBeans",
        ".recommenders/",
        ".apt_generated/",
        ".apt_generated_test/",
        ".cache-main",
        ".scala_dependencies",
        ".worksheet"
    ],
    "netbeans": [
        "# NetBeans",
        "nbproject/private/",
        "build/",
        "nbbuild/",
        "dist/",
        "nbdist/",
        "nbactions.xml",
        "nb-configuration.xml",
        ".nb-gradle/",
        "profiles.xml",
        "nbproject/",
        "build.xml",
        "manifest.mf"
    ],
    "xcode": [
        "# Xcode",
        "*.pbxuser",
        "!default.pbxuser",
        "*.mode1v3",
        "!default.mode1v3",
        "*.mode2v3",
        "!default.mode2v3",
        "*.perspectivev3",
        "!default.perspectivev3",
        "xcuserdata/",
        "*.xccheckout",
        "*.moved-aside",
        "DerivedData/",
        "*.hmap",
        "*.ipa",
        "*.xcuserstate",
        "*.xcscmblueprint",
        "*.xcscheme",
        "*.xcworkspacedata",
        "*.xcodeproj/*",
        "!*.xcodeproj/project.pbxproj",
        "!*.xcodeproj/xcshareddata/",
        "!*.xcodeproj/project.xcworkspace/",
        "!*.xcworkspace/contents.xcworkspacedata",
        "**/xcshareddata/WorkspaceSettings.xcsettings"
    ],
    "webstorm": [
        "# WebStorm",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/jsLibraryMappings.xml",
        ".idea/watcherTasks.xml",
        ".idea/jsLinters/",
        ".idea/inspectionProfiles/",
        ".idea/codeStyles/"
    ],
    "pycharm": [
        "# PyCharm",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/misc.xml",
        ".idea/modules.xml",
        ".idea/vcs.xml",
        ".idea/jsLibraryMappings.xml",
        ".idea/datasources.xml",
        ".idea/dataSources.ids",
        ".idea/sqlDataSources.xml",
        ".idea/dynamic.xml",
        ".idea/uiDesigner.xml",
        ".idea/inspectionProfiles/"
    ],
    "rubymine": [
        "# RubyMine",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".rakeTasks",
        ".generators",
        ".idea_modules/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/dataSources/",
        ".idea/dataSources.xml",
        ".idea/dataSources.ids",
        ".idea/dataSources.local.xml"
    ],
    "androidstudio": [
        "# Android Studio",
        "*.iml",
        ".gradle",
        "/local.properties",
        "/.idea/caches",
        "/.idea/libraries",
        "/.idea/modules.xml",
        "/.idea/workspace.xml",
        "/.idea/navEditor.xml",
        "/.idea/assetWizardSettings.xml",
        ".DS_Store",
        "/build",
        "/captures",
        ".externalNativeBuild",
        ".cxx",
        "local.properties",
        "*.apk",
        "*.ap_",
        "*.dex",
        "*.class",
        "bin/",
        "gen/",
        "out/",
        ".navigation/",
        "proguard/",
        "*.log",
        ".idea/tasks.xml",
        ".idea/.name",
        ".idea/compiler.xml",
        ".idea/copyright/profiles_settings.xml",
        ".idea/encodings.xml",
        ".idea/misc.xml",
        ".idea/scopes/scope_settings.xml",
        ".idea/vcs.xml",
        "*.iws",
        ".idea_modules/"
    ],
    "atom": [
        "# Atom",
        ".atom/",
        "*.cson",
        ".apm/",
        ".apm/.apmrc",
        ".apm/_locks",
        ".apm/atom-package-*",
        ".node-gyp/",
        "storage/",
        "compile-cache/",
        "dev/",
        ".atom-socket-secret-*"
    ]
},
  "vcs": {
    "git": [
        "# Git",
        ".git/",
        ".gitignore",
        ".gitattributes",
        ".gitmodules",
        ".git-rewrite/",
        "/.git-credentials",
        ".git-blame-ignore-revs",
        "*.git",
        ".gitkeep",
        ".git-old/",
        ".gitconfig",
        ".github/",
        ".gitreview",
        ".gitk",
        ".gitstats",
        ".gitchangelog.rc",
        ".git-blame*",
        ".git-rewrite/",
        ".gitmessage",
        ".gitflow",
        "git.properties"
    ],
    "subversion": [
        "# Subversion (SVN)",
        ".svn/",
        "_svn/",
        "*.svn-base",
        ".svnignore",
        ".svn-work",
        "*.svn-work",
        ".svn/entries",
        ".svn/format",
        ".svn/wc.db",
        ".svn/pristine/",
        ".svn/tmp/",
        "*.merge-left*",
        "*.merge-right*",
        "*.working",
        "*.mine",
        "*.r[0-9]*",
        "*.orig",
        "*.rej"
    ],
    "mercurial": [
        "# Mercurial (Hg)",
        ".hg/",
        ".hgignore",
        ".hgsigs",
        ".hgsub",
        ".hgsubstate",
        ".hgtags",
        ".hgrc",
        ".hgcheck/",
        ".hg_archival.txt",
        "*.orig",
        "*.rej",
        "*.conflict~",
        ".hgmail",
        ".hgeol",
        ".hgflow",
        ".hgbackup/",
        ".hgcache/",
        ".hgdebug",
        ".hgstatus"
    ],
    "bazaar": [
        "# Bazaar (Bzr)",
        ".bzr/",
        ".bzrignore",
        ".bzrtags",
        ".bzrmail",
        ".bzrmeta/",
        ".bzrchk",
        ".bzrstat",
        "*.bzr",
        ".bzr.backup/",
        ".bzr.log",
        ".bzr.revno",
        ".bzr.tags",
        ".bzr-builddeb/",
        ".bzrignore.ALL",
        ".bzr-mysql/",
        "bzr-repo/",
        "*.bzrignore"
    ],
    "cvs": [
        "# CVS",
        "CVS/",
        ".cvsignore",
        "**/CVS/",
        ".cvswrappers",
        "*.cvs",
        ",v",
        "*/RCS/",
        "*.RCS",
        "CVSROOT/",
        "*/**/CVS/",
        ".cvsrc",
        ".cvs-submit",
        ".cvs2svn*",
        "*.cvs-base",
        "*.cvs-work",
        ".cvs_unlock",
        "cvs-serv*/"
    ],
    "darcs": [
        "# Darcs",
        "_darcs/",
        ".darcs-temp-mail",
        ".darcsrepo/",
        ".darcs-checksum",
        "*.darcs-backup*",
        ".darcs-conflicts",
        "*.darcs",
        ".darcs-boring",
        ".darcs-refs"
    ],
    "fossil": [
        "# Fossil",
        ".fossil/",
        ".fossil-settings/",
        "*.fossil",
        "_FOSSIL_",
        ".fslckout",
        ".fos/",
        "*.fsl",
        "*.fossil-archive"
    ],
    "perforce": [
        "# Perforce",
        ".p4config",
        ".p4ignore",
        ".p4rc",
        ".p4root",
        ".p4env",
        "p4.settings",
        ".p4tickets",
        ".p4trust",
        "p4clientspec",
        ".p4changelist",
        "*.p4*",
        "p4cache/"
    ],
    "monotone": [
        "# Monotone",
        "_MTN/",
        ".mtn-ignore",
        "*.mtn",
        "monotone/",
        ".mtn-attrs",
        "*.mtn-rev",
        ".mtn-conf"
    ],
    "teamfoundation": [
        "# Team Foundation Version Control (TFVC)",
        "$tf/",
        ".tfignore",
        "*.vspscc",
        "*.vssscc",
        ".tfs-ignore",
        "*.tfstate",
        "localversion.txt",
        ".tfvc-ignore",
        "*.tfvc-ignore"
    ],
    "rcs": [
        "# RCS (Revision Control System)",
        "RCS/",
        "*.rcs",
        ",v",
        "*,v",
        "*.RCS",
        "*.rlog",
        "RCS.lock",
        "*/RCS/*"
    ],
    "clearcase": [
        "# IBM Rational ClearCase",
        "*.mkelem",
        "*.contrib",
        "*.keep",
        "lost+found/",
        "vobs/",
        ".copyarea.dat",
        ".copyarea.db",
        "*.updt",
        "*.tmp",
        "*.cc",
        "*.ctc",
        "*.cs",
        "*.cst",
        "*.ct"
    ],
    "accurev": [
        "# AccuRev",
        ".acignore",
        ".accurev/",
        "*.acpatch",
        "*.acbak",
        ".acws/",
        "AccuRev/",
        "*.aclock"
    ],
    "sourcesafe": [
        "# Visual SourceSafe",
        "vssver2.scc",
        "*.vspscc",
        "*.vss",
        "*.scc",
        "VSS/",
        "vss_db/",
        "srcsafe.ini"
    ]
},
  "build_tools": {
    "gradle": [
        "# Gradle",
        ".gradle/",
        "build/",
        "gradle/",
        "gradlew",
        "gradlew.bat",
        "*.gradle",
        "gradle-app.setting",
        ".gradletasknamecache",
        "gradle.properties",
        "gradle-wrapper.jar",
        "gradle-wrapper.properties",
        ".gradle-cache/",
        "gradle-build/",
        "out/",
        "classes/",
        "*.class",
        "build-cache/",
        ".gradle/buildOutputCleanup/",
        ".gradle/configuration-cache/",
        "gradle/wrapper/",
        "gradle/caches/",
        "gradle/daemon/",
        "gradle/native/",
        "gradle/wrapper/dists/"
    ],
    "maven": [
        "# Maven",
        "target/",
        "pom.xml.tag",
        "pom.xml.releaseBackup",
        "pom.xml.versionsBackup",
        "pom.xml.next",
        "release.properties",
        "dependency-reduced-pom.xml",
        "buildNumber.properties",
        ".mvn/timing.properties",
        ".mvn/wrapper/maven-wrapper.jar",
        ".mvn/wrapper/maven-wrapper.properties",
        "mvnw",
        "mvnw.cmd",
        ".m2/",
        "*.war",
        "*.ear",
        "*.jar",
        "*.nar",
        ".project",
        ".classpath",
        ".settings/",
        "maven-status/",
        "maven-archiver/",
        "generated-sources/",
        "generated-test-sources/",
        "maven-compiler-plugin/"
    ],
    "cmake": [
        "# CMake",
        "CMakeCache.txt",
        "CMakeFiles/",
        "CMakeScripts/",
        "CMakeTmp/",
        "Testing/",
        "Makefile",
        "cmake_install.cmake",
        "install_manifest.txt",
        "compile_commands.json",
        "CTestTestfile.cmake",
        "_deps/",
        "build/",
        "bin/",
        "lib/",
        "*.cmake",
        "CMakeUserPresets.json",
        "CMakeSettings.json",
        "CMakePresets.json",
        "CMakeLists.txt.user",
        "CMakeDoxyfile.in",
        "CMakeDoxygenDefaults.cmake",
        "_CPack_Packages/",
        "DartConfiguration.tcl"
    ],
    "makefile": [
        "# Make",
        "*.o",
        "*.d",
        "*.ko",
        "*.obj",
        "*.elf",
        "*.ilk",
        "*.map",
        "*.exp",
        "*.gch",
        "*.pch",
        "*.lib",
        "*.a",
        "*.la",
        "*.lo",
        "*.dll",
        "*.so",
        "*.so.*",
        "*.dylib",
        "*.exe",
        "*.out",
        "*.app",
        "*.i*86",
        "*.x86_64",
        "*.hex",
        "*.dSYM/",
        "*.su",
        "*.idb",
        "*.pdb",
        "*.mod*",
        "*.cmd",
        ".tmp_versions/",
        "modules.order",
        "Module.symvers",
        "Mkfile.old",
        "dkms.conf",
        ".deps/",
        ".libs/"
    ],
    "ant": [
        "# Apache Ant",
        "build/",
        "dist/",
        "bin/",
        "gen/",
        "out/",
        "build.xml",
        "ant.properties",
        "local.properties",
        "proguard-project.txt",
        "build.properties",
        "*.war",
        "*.ear",
        "*.jar",
        "build-impl.xml",
        "ant-build/",
        "ant-gen/",
        ".ant-targets-build.xml"
    ],
    "bazel": [
        "# Bazel",
        "bazel-bin",
        "bazel-out",
        "bazel-testlogs",
        "bazel-workspace",
        "bazel-*",
        ".bazelrc.user",
        ".bazelignore",
        ".bazel/",
        "*.bazel.rc",
        "*.bazelrc",
        ".bazel-cache/",
        "bazel-out/",
        "compile_commands.json"
    ],
    "buck": [
        "# Buck",
        "buck-out/",
        ".buckd/",
        ".buckconfig.local",
        ".buck-cache/",
        "buck-image-out/",
        ".buckversion",
        ".buckconfig",
        "buck-gen/"
    ],
    "sbt": [
        "# SBT (Scala Build Tool)",
        "target/",
        "project/target/",
        "project/project/",
        ".sbt/",
        "*.class",
        "*.log",
        ".cache",
        ".history",
        ".lib/",
        "dist/*",
        "lib_managed/",
        "src_managed/",
        "project/boot/",
        "project/plugins/project/",
        ".scala_dependencies",
        ".worksheet",
        ".bsp/"
    ],
    "cargo": [
        "# Cargo (Rust)",
        "target/",
        "Cargo.lock",
        "**/*.rs.bk",
        "*.rlib",
        "*.rmeta",
        ".cargo-lock",
        ".cargo/",
        "cargo.toml.orig",
        "cargo.toml.bk"
    ],
    "msbuild": [
        "# MSBuild",
        "[Bb]in/",
        "[Oo]bj/",
        "[Dd]ebug/",
        "[Rr]elease/",
        "x64/",
        "x86/",
        "[Bb]uild/",
        "*.user",
        "*.aps",
        "*.pch",
        "*.vspscc",
        "*.vssscc",
        ".builds",
        "*.pidb",
        "*.svclog",
        "*.scc",
        "_UpgradeReport_Files/",
        "Backup*/",
        "UpgradeLog*.XML",
        "UpgradeLog*.htm"
    ],
    "ninja": [
        "# Ninja",
        ".ninja_deps",
        ".ninja_log",
        "build.ninja",
        ".ninja/",
        "*.ninja"
    ],
    "webpack": [
        "# Webpack",
        "dist/",
        "build/",
        ".webpack/",
        "webpack.generated.js",
        "webpack-stats.json",
        "webpack.config.js.bak",
        "webpack-assets.json",
        "webpack.records.json"
    ],
    "gulp": [
        "# Gulp",
        "gulpfile.js.bak",
        ".gulp-cache/",
        ".gulp/",
        "gulp-cache/",
        "gulp.1"
    ],
    "grunt": [
        "# Grunt",
        "node_modules/",
        ".grunt/",
        "Gruntfile.js.bak",
        "grunt-config/",
        ".grunt-cache/"
    ]
},
  "package_managers": {
    "npm": [
        "# NPM (Node Package Manager)",
        "node_modules/",
        "package-lock.json",
        ".npm/",
        ".node-gyp/",
        "npm-debug.log*",
        ".npmrc",
        ".npm-cache/",
        ".npm-global/",
        ".node_repl_history",
        ".env",
        "npm-shrinkwrap.json",
        ".npmignore",
        ".package-lock.json",
        "npm-debug.log.*",
        ".npm-debug/",
        ".npm-tmp/",
        ".npm-tarball/",
        "node_modules_*",
        ".npm-init.js",
        ".npm-update-notifier",
        ".node_modules.ember-try/"
    ],
    "yarn": [
        "# Yarn",
        "yarn.lock",
        ".yarn/",
        ".yarnrc",
        ".yarn-integrity",
        ".yarn-metadata.json",
        "yarn-debug.log*",
        "yarn-error.log*",
        ".yarn-cache/",
        ".yarn/cache",
        ".yarn/unplugged",
        ".yarn/build-state.yml",
        ".yarn/install-state.gz",
        ".pnp.*",
        ".yarn/sdks",
        ".yarn/versions",
        ".yarn/plugins",
        ".yarn/releases",
        ".yarnrc.yml",
        ".yarn/patches/",
        ".yarn-update-notifier",
        "yarn.build.json"
    ],
    "pnpm": [
        "# PNPM",
        "pnpm-lock.yaml",
        "pnpm-workspace.yaml",
        ".pnpm/",
        ".pnpm-debug.log",
        ".pnpm-store/",
        "pnpm-lock.yaml.bak",
        ".pnpmfile.cjs",
        "node_modules/",
        ".pnpm-cache/"
    ],
    "pipenv": [
        "# Pipenv",
        "Pipfile.lock",
        "Pipfile",
        ".venv/",
        ".env",
        ".python-version",
        "Pipfile.bak",
        ".pipenv/",
        ".pipenv-cache/",
        "pipenv-debug.log",
        ".pipenv.lock.bak",
        "pipenv.lock.bak",
        ".pipenv-shims/"
    ],
    "pip": [
        "# Pip",
        "pip-log.txt",
        "pip-delete-this-directory.txt",
        ".pip-cache/",
        ".pip/",
        "pip-selfcheck.json",
        "requirements.txt.bak",
        ".pip-tmp/",
        ".pip-build/",
        "pip-wheel-metadata/",
        ".pip_cache/"
    ],
    "poetry": [
        "# Poetry",
        "poetry.lock",
        ".poetry/",
        "poetry.toml",
        ".venv/",
        "dist/",
        "poetry/",
        ".poetry-cache/",
        "poetry-debug.log",
        "poetry.lock.bak"
    ],
    "composer": [
        "# Composer (PHP)",
        "vendor/",
        "composer.lock",
        "composer.phar",
        ".composer/",
        "composer.json.bak",
        "composer/",
        ".php_cs.cache",
        ".phpunit.result.cache",
        "composer-setup.php",
        ".composer-update-check",
        "composer-test-cleanup",
        "composer-temp*/",
        ".composer-cache/"
    ],
    "bundler": [
        "# Bundler (Ruby)",
        "vendor/bundle/",
        ".bundle/",
        "Gemfile.lock",
        ".bundleignore",
        "bundle/",
        ".bundle-cache/",
        ".bundler/",
        "bundler.d/",
        ".gem/",
        "ruby/",
        "bundler_*.gem",
        ".bundler_checksum"
    ],
    "cargo": [
        "# Cargo (Rust)",
        "Cargo.lock",
        "target/",
        ".cargo/",
        "cargo.toml.orig",
        ".crates.toml",
        ".crates2.json",
        ".cargo-ok",
        "cargo-timing*.html",
        ".cargo-cache/"
    ],
    "nuget": [
        "# NuGet (.NET)",
        "packages/",
        "*.nupkg",
        "*.nuget.props",
        "*.nuget.targets",
        ".nuget/",
        "project.lock.json",
        "*.nuget.cache",
        ".packages/",
        "global.json",
        ".nuget-packages/",
        "*.nuget.dgspec.json",
        ".nuget-plugins/"
    ],
    "maven": [
        "# Maven",
        ".m2/",
        "repository/",
        ".mvn/",
        "maven/",
        ".maven/",
        "maven-repository/",
        ".maven-cache/",
        "maven-metadata-local.xml",
        ".maven_repos/"
    ],
    "gradle": [
        "# Gradle",
        ".gradle/",
        "gradle/",
        "gradle-app.setting",
        ".gradletasknamecache",
        "gradle-wrapper.jar",
        "gradle-wrapper.properties",
        ".gradle-cache/"
    ],
    "cocoapods": [
        "# CocoaPods (iOS)",
        "Pods/",
        "Podfile.lock",
        ".cocoapods/",
        "*.xcworkspace",
        "Pods.xcodeproj",
        ".pod/",
        "pod-install-checksum",
        ".podinstall.lock",
        "Manifest.lock"
    ],
    "carthage": [
        "# Carthage (iOS)",
        "Carthage/",
        "Cartfile.resolved",
        ".carthage_cache/",
        "Carthage/Build",
        "Carthage/Checkouts"
    ],
    "bower": [
        "# Bower",
        "bower_components/",
        "bower.json",
        ".bower-cache/",
        ".bower-registry/",
        ".bower-tmp/",
        ".bowerrc",
        "bower_packages/"
    ],
    "pub": [
        "# Pub (Dart)",
        ".pub/",
        ".pub-cache/",
        "pubspec.lock",
        ".packages",
        "build/",
        ".dart_tool/",
        ".pub-preload-cache/"
    ],
    "hex": [
        "# Hex (Elixir)",
        "_build/",
        "deps/",
        "mix.lock",
        ".hex/",
        ".mix/",
        ".hex-cache/"
    ],
    "conda": [
        "# Conda",
        "conda-env/",
        ".conda/",
        "env/",
        "venv/",
        ".conda-cache/",
        "conda-meta/",
        "conda-bld/",
        ".condarc",
        "environment.yml.lock"
    ],
    "vcpkg": [
        "# Vcpkg (C++)",
        "vcpkg/",
        "vcpkg_installed/",
        ".vcpkg/",
        "vcpkg-manifest-install.log",
        ".vcpkg-cache/"
    ],
    "conan": [
        "# Conan (C++)",
        "conan.lock",
        "conanbuildinfo.*",
        "conaninfo.txt",
        "CMakeUserPresets.json",
        ".conan/",
        "conan_imports_manifest.txt"
    ]
},
  "security_and_credentials": {
    "credentials": [
        "# Environment Variables and Configuration",
        ".env",
        ".env.local",
        ".env.*.local",
        ".env.development",
        ".env.test",
        ".env.production",
        ".env.backup",
        ".env.save",
        ".env.bak",
        "*.env",
        ".env-*",
        "env.json",
        "config.json",
        "secrets.json",
        "credentials.json",
        "secret.json",
        "settings.json",
        ".credentials",
        ".secret",
        
        "# API Keys and Tokens",
        "*.api",
        "*.apikey",
        "api_key",
        "api_secret",
        "*.token",
        "token.*",
        "access_token*",
        "auth_token*",
        "*.oauth",
        "oauth.*",
        "oauth_token.*",
        
        "# Certificates and Keys",
        "*.key",
        "*.pem",
        "*.crt",
        "*.cer",
        "*.der",
        "*.pfx",
        "*.p12",
        "*.keystore",
        "*.jks",
        "*.p7b",
        "*.p7c",
        "*.csr",
        "*.spc",
        "*.cert",
        "*.ssl",
        "private.*",
        "public.*",
        "*.priv",
        "*.pub",
        "*.secret",
        
        "# Database Credentials",
        "*.db_password",
        "database.yml",
        "database.json",
        "db.config",
        "db.json",
        "db.yml",
        "sequelize.json",
        "*.sqlite",
        "mongod.conf",
        "redis.conf",
        
        "# Cloud Service Credentials",
        "aws.json",
        "aws.yml",
        "aws_credentials",
        "credentials.csv",
        "google-services.json",
        "googlecloud.json",
        "azure.json",
        "*.azureauth",
        "firebase.json",
        "firebaserc",
        
        "# Authentication Files",
        "auth.json",
        "auth.config",
        "authentication.json",
        "*.auth",
        "*.login",
        "passwd",
        "passwords.txt",
        "htpasswd",
        "*.htpasswd",
        
        "# Backup Files",
        "*.key.bak",
        "*.pem.bak",
        "*.crt.bak",
        ".env.bak",
        "*.backup",
        "*.secret.bak",
        "backup-*.key"
    ],
    "ssh_keys": [
        "# SSH Keys",
        "id_rsa",
        "id_rsa.pub",
        "id_dsa",
        "id_dsa.pub",
        "id_ecdsa",
        "id_ecdsa.pub",
        "id_ecdsa_sk",
        "id_ecdsa_sk.pub",
        "id_ed25519",
        "id_ed25519.pub",
        "id_ed25519_sk",
        "id_ed25519_sk.pub",
        "identity",
        "identity.pub",
        "*.pem",
        "authorized_keys",
        "known_hosts",
        "config",
        "*.ssh",
        ".ssh/",
        "ssh_config",
        "sshd_config",
        "ssh_host_*_key",
        "ssh_host_*_key.pub",
        ".ssh/id_*",
        ".ssh/*.private",
        ".ssh/*.public",
        "*.ppk",
        "putty.log"
    ],
    "encryption_keys": [
        "# Encryption Keys",
        "*.key",
        "*.keyring",
        "*.gpg",
        "*.pgp",
        "*.asc",
        "*.kbx",
        "secring.*",
        "pubring.*",
        "trustdb.gpg",
        "*.kbx~",
        "*.key~",
        "private.key",
        "public.key",
        "master.key",
        "*.private",
        "*.public",
        "encryption.key",
        "decryption.key"
    ],
    "certificates": [
        "# SSL/TLS Certificates",
        "*.crt",
        "*.cer",
        "*.ca-bundle",
        "*.p7b",
        "*.p7c",
        "*.p7s",
        "*.pfx",
        "*.p12",
        "cacert.pem",
        "cert.pem",
        "server.crt",
        "client.crt",
        "ca.crt",
        "ssl.crt",
        "*.chain",
        "chain.pem",
        "fullchain.pem",
        "certificate.pem",
        "selfsigned.*"
    ],
    "authentication_tokens": [
        "# Authentication Tokens",
        "*.token",
        "token.*",
        ".token",
        "auth.token",
        "jwt.token",
        "bearer.token",
        "oauth.token",
        "access.token",
        "refresh.token",
        "session.token",
        "*.jwt",
        "*.oauth2",
        "*.refresh",
        ".credentials",
        "credentials.*",
        "auth_config.*"
    ],
    "password_files": [
        "# Password Files",
        "*.pwd",
        "*.passwd",
        "passwords.txt",
        "passwords.json",
        "passwords.yml",
        "passwords.yaml",
        "passwords.csv",
        "*.htpasswd",
        ".htaccess",
        "shadow",
        "passwd",
        "*.password",
        "password.*",
        "secrets.*",
        "*.secret"
    ],
    "signing_keys": [
        "# Code Signing Keys",
        "*.keystore",
        "*.jks",
        "*.p12",
        "signing.properties",
        "signing_key.json",
        "signing-key.*",
        "codesign.*",
        "*.mobileprovision",
        "*.provisionprofile",
        "*.cer",
        "signing.keychain",
        "*.sign",
        "signingkey.*"
    ],
    "hardware_security": [
        "# Hardware Security Module Files",
        "*.hsm",
        "hsm.conf",
        "hsm.key",
        "hsm.cert",
        "hsm_config.*",
        "yubikey.*",
        "*.tpm",
        "tpm.conf"
    ],
    "biometric": [
        "# Biometric Data Files",
        "*.bio",
        "*.biometric",
        "fingerprint.*",
        "face_id.*",
        "biometric.dat",
        "bio_config.*"
    ],
    "mfa": [
        "# Multi-Factor Authentication",
        "*.2fa",
        "2fa.*",
        "mfa.*",
        "*.mfa",
        "totp.*",
        "*.totp",
        "authenticator.*",
        "2factor.*"
    ]
}
}
