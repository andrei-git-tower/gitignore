{
  "basic": {
    "universal": [
        "# Logs",
        "*.log",
        
        "# Temporary files",
        "*.tmp",
        "*~",
        "*.bak",
        
        "# Environment files (containing secrets, API keys, credentials)",
        ".env",
        "*.env",
        ".env.*",
        
        "# Local configuration that shouldn't be shared",
        "*.local"
    ]
},  
  "frameworks": {
    "node": [
      "# Dependencies",
      "node_modules/",
      "jspm_packages/",
      "bower_components/",
      "web_modules/",
      "# Logs",
      "logs",
      "*.log",
      "*.launch",
      "connect.lock/",
      "libpeerconnection.log",
      ".history/",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      "lerna-debug.log*",
      ".pnpm-debug.log*",
      "# Diagnostic reports",
      "report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json",
      "# Runtime data",
      "pids",
      "*.pid",
      "*.seed",
      "*.pid.lock",
      "# Environment",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local",
      ".env.local",
      "# Package management",
      ".npm",
      "package-lock.json",
      "yarn.lock",
      ".yarn-integrity",
      ".yarn/cache",
      ".yarn/unplugged",
      ".yarn/build-state.yml",
      ".yarn/install-state.gz",
      ".pnp.*",
      "# Coverage & Test",
      "coverage/",
      "lib-cov",
      "*.lcov",
      ".nyc_output",
      "# Build output",
      "dist/",
      "build/",
      ".next/",
      "out/",
      ".nuxt",
      ".output",
      "# Cache & Temporary",
      ".cache/",
      ".temp/",
      ".grunt",
      ".lock-wscript",
      ".fusebox/",
      ".dynamodb/",
      ".tern-port",
      ".vscode-test",
      ".node_repl_history",
      ".webpack/",
      "# TypeScript",
      "*.tsbuildinfo",
      "# Optional REPL history",
      ".node_repl_history",
      "# Additional caches",
      ".eslintcache",
      ".stylelintcache",
      ".parcel-cache",
      ".rpt2_cache/",
      ".rts2_cache_cjs/",
      ".rts2_cache_es/",
      ".rts2_cache_umd/",
      "# Misc",
      "*.tgz",
      ".serverless/",
      ".vuepress/dist",
      ".temp",
      ".docusaurus",
      ".svelte-kit"
    ],
    "react": [
      "build/",
      ".env.local",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      ".DS_*",
      "**/*.backup.*",
      "**/*.back.*",
      "*.sublime*",
      "psd",
      "thumb",
      "sketch",
      "coverage/"
    ],
    "python": [
      "__pycache__/",
      "*.py[cod]",
      "*$py.class",
      "*.so",
      ".Python",
      "pypackages/",
      "build/",
      "develop-eggs/",
      "dist/",
      "downloads/",
      "eggs/",
      ".eggs/",
      "lib/",
      "lib64/",
      "parts/",
      "sdist/",
      "var/",
      "wheels/",
      "share/python-wheels/",
      "*.egg-info/",
      ".installed.cfg",
      "*.egg",
      "MANIFEST",
      ".venv",
      "env/",
      "venv/",
      "ENV/",
      ".pytest_cache/",
      ".coverage",
      "htmlcov/",
      "# PyInstaller",
      "*.manifest",
      "*.spec",
      "# Installer logs",
      "pip-log.txt",
      "pip-delete-this-directory.txt",
      "# Unit test / coverage reports",
      ".tox/",
      ".nox/",
      ".coverage.*",
      "nosetests.xml",
      "coverage.xml",
      "*.cover",
      "*.py,cover",
      ".hypothesis/",
      "cover/",
      "# Translations",
      "*.mo",
      "*.pot",
      "# Django",
      "local_settings.py",
      "db.sqlite3",
      "db.sqlite3-journal",
      "# Flask",
      "instance/",
      ".webassets-cache",
      "# Scrapy",
      ".scrapy",
      "# Sphinx",
      "docs/_build/",
      "# PyBuilder",
      ".pybuilder/",
      "target/",
      "# Jupyter Notebook",
      ".ipynb_checkpoints",
      "# IPython",
      "profile_default/",
      "ipython_config.py",
      "# pyenv",
      "#.python-version",
      "# pipenv",
      "#Pipfile.lock",
      "# poetry",
      "#poetry.lock",
      "# pdm",
      ".pdm.toml",
      "__pypackages__/",
      "# Celery",
      "celerybeat-schedule",
      "celerybeat.pid",
      "# SageMath",
      "*.sage.py",
      "# Spyder",
      ".spyderproject",
      ".spyproject",
      "# Rope",
      ".ropeproject",
      "# mkdocs",
      "/site",
      "# mypy",
      ".mypy_cache/",
      ".dmypy.json",
      "dmypy.json",
      "# Pyre",
      ".pyre/",
      "# pytype",
      ".pytype/",
      "# Cython",
      "cython_debug/",
      "# Poetry",
      "poetry.toml",
      "# ruff",
      ".ruff_cache/",
      "# LSP",
      "pyrightconfig.json",
      "*.sage.py",
      ".pdm.toml",
      "profile_default/",
      ".nox/",
      ".spyproject",
      "site/"
    ],
    "java": [
      "*.class",
      "*.log",
      "*.ctxt",
      ".mtj.tmp/",
      "*.jar",
      "*.war",
      "*.nar",
      "*.ear",
      "*.zip",
      "*.tar.gz",
      "*.rar",
      "hs_err_pid*",
      "replay_pid*",
      ".classpath",
      ".project",
      ".settings/",
      "target/",
      "bin/",
      "build/",
      ".settings/",
      "*.launch",
      ".apt_generated/",
      ".factorypath",
      ".springBeans"
    ],
    "angular": [
      "dist/",
      "tmp/",
      "out-tsc/",
      "bazel-out",
      "node_modules/",
      "npm-debug.log",
      "yarn-error.log",
      ".idea/",
      ".project",
      ".classpath",
      ".c9/",
      "*.launch",
      ".settings/",
      "*.sublime-workspace",
      ".vscode/*",
      "!.vscode/settings.json",
      "!.vscode/tasks.json",
      "!.vscode/launch.json",
      "!.vscode/extensions.json",
      ".history/*",
      "app/**/*.js",
      "app/**/*.js.map",
      "bower_components/",
      ".sass-cache/",
      "connect.lock/",
      "coverage/",
      "libpeerconnection.log",
      "testem.log",
      "typings/",
      ".angular/",
      "e2e/*.js",
      "e2e/*.map"
    ],
    "vue": [
      ".DS_Store",
      "node_modules",
      "dist",
      "dist-ssr",
      "coverage",
      "*.local",
      ".output",
      "storybook-static/",
      ".vuepress/dist",
      "/cypress/videos/",
      "/cypress/screenshots/",
      ".env.local",
      ".env.*.local",
      "*.log"
    ],
    "django": [
      "*.log",
      "*.pot",
      "*.pyc",
      "__pycache__/",
      "local_settings.py",
      "db.sqlite3",
      "db.sqlite3-journal",
      "media",
      "*.py[cod]",
      "*$py.class",
      ".venv",
      "env/",
      "venv/",
      "ENV/",
      "static/",
      "migrations/",
      "*.so",
      ".Python",
      "build/",
      "develop-eggs/",
      "downloads/",
      "eggs/",
      ".eggs/",
      "lib/",
      "lib64/",
      "parts/",
      "sdist/",
      "var/",
      "wheels/",
      "share/python-wheels/",
      "*.egg-info/",
      ".installed.cfg",
      "*.egg",
      "MANIFEST",
      "*.manifest",
      "*.spec",
      "pip-log.txt",
      "pip-delete-this-directory.txt",
      "htmlcov/",
      ".tox/",
      ".nox/",
      ".coverage",
      ".coverage.*",
      ".cache",
      "nosetests.xml",
      "coverage.xml",
      "*.cover",
      "*.py,cover",
      ".hypothesis/",
      ".pytest_cache/",
      "cover/",
      "*.mo",
      "instance/",
      ".webassets-cache",
      ".scrapy",
      "docs/_build/",
      ".pybuilder/",
      "target/",
      ".ipynb_checkpoints",
      "profile_default/",
      "ipython_config.py",
      ".pdm.toml",
      "__pypackages__/",
      "celerybeat-schedule",
      "celerybeat.pid",
      "*.sage.py",
      "env.bak/",
      "venv.bak/",
      ".spyderproject",
      ".spyproject",
      ".ropeproject",
      "/site",
      ".mypy_cache/",
      ".dmypy.json",
      "dmypy.json",
      ".pyre/",
      ".pytype/",
      "cython_debug/"
    ],
    "dotnet": [
      "bin/",
      "obj/",
      "*.user",
      "*.userosscache",
      "*.sln.docstates",
      ".vs/",
      "*_i.c",
      "*_p.c",
      "*.ncb",
      "*.suo",
      "*.tlb",
      "*.tlh",
      "*.bak",
      "*.cache",
      "*.ilk",
      "*.log",
      "*.lib",
      "*.sbr",
      "*.sdf",
      "packages/",
      "TestResults/",
      "[Bb]in/",
      "[Dd]ebug/",
      "[Rr]elease/"
    ],
    "flutter": [
      "build/",
      ".dart_tool/",
      ".flutter-plugins",
      ".flutter-plugins-dependencies",
      ".packages",
      ".pub-cache/",
      ".pub/",
      "/build/",
      ".metadata",
      "*.freezed.dart",
      "*.g.dart",
      "*.mocks.dart",
      "*.lock",
      "*.log",
      "*.pyc",
      "*.swp",
      ".DS_Store",
      ".atom/",
      ".buildlog/",
      ".history",
      ".svn/",
      "*.iml",
      "*.iws",
      ".idea/",
      ".metadata",
      "/ios/ /profile",
      "**/ios/Flutter/.last_build_id",
      "**/android/gradlew",
      "**/android/gradlew.bat"
    ],
    "laravel": [
      "/node_modules",
      "/public/hot",
      "/public/storage",
      "/storage/*.key",
      "/vendor",
      ".env.backup",
      "storage/framework/",
      "storage/logs/",
      ".env.testing",
      "docker-compose.override.yml",
      ".phpunit.result.cache",
      "Homestead.json",
      "Homestead.yaml",
      "npm-debug.log",
      "yarn-error.log",
      "*.sqlite",
      ".idea",
      ".vscode"
    ],
    "flask": [
      "__pycache__/",
      "*.pyc",
      "*.pyo",
      "*.pyd",
      ".venv/",
      "instance/",
      "migrations/"
    ],
    "ruby_on_rails": [
      "/log/",
      "/tmp/",
      "/db/*.sqlite3",
      "/db/*.sqlite3-journal",
      "/public/system/",
      "/public/uploads/"
    ],
    "spring": [
      "*.class",
      "*.war",
      "*.ear",
      ".gradle/",
      "build/",
      "target/",
      ".idea/",
      "*.iml"
    ],
    "asp_net": [
      "bin/",
      "obj/",
      "*.user",
      "*.suo",
      "*.pdb",
      "*.cache",
      "*.log"
    ],
    "svelte": [
      "node_modules/",
      "build/",
      ".cache/",
      "*.log"
    ],
    "next_js": [
      ".next/",
      ".env.local",
      ".env.development.local",
      ".env.test.local",
      ".env.production.local"
    ],
    "express": [
      "node_modules/",
      "logs/",
      "*.log"
    ],
    "meteor": [
      ".meteor/local/",
      "node_modules/",
      ".npm/"
    ],
    "nuxt_js": [
      ".nuxt/",
      "node_modules/"
    ],
    "javascript": [
      "node_modules/",
      "*.log",
      "npm-debug.log*",
      "yarn-debug.log*",
      ".cache/",
      "dist/",
      "coverage/"
    ],
    "html": [
      "*.html",
      "*.htm",
      ".DS_Store"
    ],
    "css": [
      "*.css.map",
      ".sass-cache/",
      "*.scssc"
    ],
    "sql": [
      "*.sql.bak",
      "*.sql~"
    ],
    "typescript": [
      "*.tsbuildinfo",
      "node_modules/",
      "dist/"
    ],
    "bash": [
      "*.sh~",
      "*.bash_history"
    ],
    "shell": [
      "*.sh~",
      "*.shell_history"
    ],
    "csharp": [
      "bin/",
      "obj/",
      "*.user",
      "*.suo"
    ],
    "c": [
      "*.o",
      "*.out",
      "*.a"
    ],
    "cpp": [
      "*.o",
      "*.out",
      "*.a"
    ],
    "php": [
      "vendor/",
      "composer.lock"
    ],
    "powershell": [
      "*.ps1~"
    ],
    "go": [
      "*.exe",
      "*.test",
      "vendor/",
      "*.out",
      "go.work",
      "go.sum"
    ],
    "rust": [
      "/target/",
      "**/*.rs.bk",
      "debug/",
      "target/debug/",
      "target/release/"
    ],
    "kotlin": [
      "/build/",
      "/out/"
    ],
    "lua": [
      "*.luac",
      "*.out",
      "*.log",
      ".DS_Store"
    ],
    "dart": [
      ".dart_tool/",
      "packages/",
      "*.lock",
      ".pub/"
    ],
    "assembly": [
      "*.o",
      "*.lst",
      "*.map",
      "*.bin"
    ],
    "ruby": [
      "/log/",
      "/tmp/",
      "/.bundle/",
      "/vendor/bundle/",
      ".dat*",
      ".repl_history",
      "*.bridgesupport",
      ".yardoc/",
      ".ruby-version",
      ".ruby-gemset"
    ],
    "swift": [
      "build/",
      "DerivedData/",
      "*.xcodeproj/*",
      "*.xcworkspace/*",
      "timeline.xctimeline",
      "playground.xcworkspace",
      ".build/",
      "Dependencies/",
      ".accio/"
    ],
    "r": [
      ".Rhistory",
      ".RData",
      ".Rproj.user/"
    ],
    "visual_basic": [
      "*.exe",
      "*.dll",
      "*.pdb",
      "obj/",
      "bin/"
    ],
    "matlab": [
      "*.asv",
      "*.m~",
      "*.mlx~"
    ],
    "vba": [
      "*.bas~",
      "*.cls~",
      "*.frm~"
    ],
    "groovy": [
      ".gradle/",
      "build/",
      "*.class"
    ],
    "scala": [
      ".idea/",
      ".metals/",
      ".bloop/",
      ".ammonite/"
    ],
    "perl": [
      "*.pl~",
      "*.pm~",
      ".build/"
    ],
    "objective_c": [
      "*.o",
      "*.d",
      "*.obj",
      "*.exe",
      "*.dll",
      "*.app/",
      "*.ipa/",
      "build/"
    ],
    "elixir": [
      "_build/",
      "deps/",
      "*.beam"
    ],
    "haskell": [
      "dist-newstyle/",
      ".stack-work/",
      "*.hi",
      "*.o"
    ],
    "delphi": [
      "__history/",
      "*.dcu",
      "*.bpl",
      "*.dcp",
      "Win32/Debug/",
      "Win32/Release/"
    ],
    "micropython": [
      "__pycache__/",
      "*.mpy"
    ],
    "lisp": [
      "*~",
      "*.fasl",
      "*.ufasl",
      ".cache/"
    ],
    "clojure": [
      ".lein-repl-history",
      ".nrepl-port",
      "target/"
    ],
    "julia": [
      ".julia_history",
      ".julia_env/",
      ".vscode/"
    ],
    "zig": [
      "zig-cache/",
      "zig-out/"
    ],
    "fortran": [
      "*.mod",
      "*.o"
    ],
    "solidity": [
      "cache/",
      "artifacts/",
      "*.bin",
      "*.abi"
    ],
    "ada": [
      "*.ali",
      "*.o",
      "*.exe"
    ],
    "erlang": [
      "*.beam",
      "*.dump",
      "ebin/",
      "_build/",
      "rebar.lock"
    ],
    "fsharp": [
      "*.dll",
      "*.exe",
      "*.pdb",
      "obj/",
      "bin/"
    ],
    "apex": [
      ".sfdx/",
      "*.log",
      ".vscode/"
    ],
    "prolog": [
      "*.pl~",
      "*.pro~",
      ".swp"
    ],
    "ocaml": [
      "_build/",
      "*.cmx",
      "*.cmi",
      "*.o"
    ],
    "cobol": [
      "*.lst",
      "*.o",
      "*.int"
    ],
    "crystal": [
      ".crystal/",
      ".shards/",
      "*.dwarf"
    ],
    "nim": [
      "nimcache/",
      "*.exe",
      "*.dll"
    ],
    "zephyr": [
      "build/",
      ".config"
    ]
  },
  "os": {
    "macos": [
      ".DS_Store",
      ".AppleDouble",
      ".LSOverride",
      "Icon",
      "._*",
      ".DocumentRevisions-V100",
      ".fseventsd",
      ".Spotlight-V100",
      ".TemporaryItems",
      ".Trashes",
      ".VolumeIcon.icns",
      ".com.apple.timemachine.donotpresent",
      ".AppleDB",
      ".AppleDesktop",
      "Network Trash Folder",
      "Temporary Items",
      ".apdisk",
      "*.icloud",
      ".AppleDB/",
      ".AppleDesktop/",
      "*.AppleDouble",
      "*.AppleDB",
      ".Spotlight-V100/",
      ".Trashes/",
      "*.swp",
      "Network Trash Folder/",
      ".DS_Store?",
      ".Spotlight-V100",
      ".Trashes"
    ],
    "windows": [
      "Thumbs.db",
      "Thumbs.db:encryptable",
      "ehthumbs.db",
      "ehthumbs_vista.db",
      "*.stackdump",
      "[Dd]esktop.ini",
      "$RECYCLE.BIN/",
      "*.cab",
      "*.msi",
      "*.msix",
      "*.msm",
      "*.msp",
      "*.lnk",
      "*.tmp",
      "*.bak",
      "System Volume Information/",
      "[Tt]emp/",
      "$Recycle.Bin/",
      "~$*",
      "*.log",
      "hiberfil.sys",
      "pagefile.sys",
      "*.db",
      "Desktop.ini",
      "ntuser.dat*"
    ],
    "linux": [
      "*~",
      ".fuse_hidden*",
      ".directory",
      ".Trash-*",
      ".nfs*",
      ".swap",
      ".swp",
      ".swo",
      ".swn",
      ".bash_history",
      ".cache/",
      ".config/",
      ".local/",
      "lost+found/",
      ".gvfs/",
      ".dbus/",
      ".thumbnails/",
      ".Xauthority",
      ".ICEauthority",
      ".recently-used",
      "*.tmp",
      ".pid",
      ".lock",
      "core",
      "core.*",
      ".saves-*",
      ".*.kate-swp"
    ]
  },
  "environment_specific_files": {
    "docker": [
      "# Common directories to exclude",
      "node_modules/",
      "bower_components/",
      "target/",
      "dist/",
      "build/",
      ".cache/",
  
      "# Log files",
      "*.log",
      "logs/",
  
      "# Git-related files",
      ".git/",
      ".gitignore",
  
      "# Environment files",
      ".env",
      ".env.*",
  
      "# Temporary files",
      "*.tmp",
      "*.swp",
  
      "# IDE-specific files",
      ".idea/",
      ".vscode/",
  
      "# Docker-specific files",
      "Dockerfile.*",
      "docker-compose.override.yml",
      ".docker/",
      "docker-compose.override.yaml",
      "docker-compose.*.yml",
      "docker-compose.*.yaml",
      "*.env.docker",
      "docker-volumes/",
      ".docker-sync/",
      "docker/data/",
      "docker/logs/",
      "docker-compose.prod.yml",
      "docker-compose.dev.yml",
      "docker-compose.local.yml",
  
      "# CI/CD-related files",
      ".dockerignore"
  ],
    "kubernetes": [
      "# Kubernetes configuration files",
      "*.yaml", 
      "*.yml",
      "kubeconfig",
      ".kube/",
      "*.kubeconfig",
      "*.pem",
      "*.crt",
      "*.key",
      "*.csr",
      "values.*.yaml",
      "values.*.yml",
      ".helmignore",
      ".helm/",
      "manifests/",
      "k8s/",
      "cluster/",
      "*.decoded.*",
      "kubeseal/",
      "sealed-secrets/",
  
      "# Secrets and sensitive data",
      "*.secret.yaml",
      "*.config.yaml",
  
      "# Logs and temporary files",
      "*.log",
      "*.tmp"
  ],
    "terraform": [
      "# Terraform state files",
      "*.tfstate",
      "*.tfstate.backup",
      "terraform.tfvars",
      "terraform.tfvars.json",
      "*.tfvars.json",
      "override.tf",
      "override.tf.json",
      "*_override.tf",
      "*_override.tf.json",
      ".terraformrc",
      "terraform.rc",
      ".terraform.d/",
      "*.tfstate.*",
      ".terragrunt-cache/",
      "terragrunt.iml",
      ".terraform-version",
      "crash.*.log",
      ".terraform-docs.yml",
  
      "# Crash logs generated by Terraform",
      "crash.log",
  
      "# Terraform plan output file",
      "*.tfplan",
  
      "# Sensitive variable definitions (if any)",
      "*.auto.tfvars",
  
      "# Terraform working directory",
      ".terraform/",
      
      "# Lock file for provider versions",
      ".terraform.lock.hcl"
  ]
},
  "editors": {
    "vim": [
        "# Vim temporary files",
        "*.swp",
        "*.swo",
        "*.swn",
        "*.swm",
        "*.swl",
        "*.un~",
        "*~",
        ".netrwhist",
        "Session.vim",
        "Sessionx.vim",
        ".vim/",
        "*.vim.old",
        ".viminfo",
        ".vimrc.local",
        ".nvimlog",
        ".undo/",
        ".backup/",
        ".swap/",
        ".vim-bookmarks",
        ".vimsession",
        ".vim-fuf-data/",
        "*.orig",
        "[._]*.s[a-v][a-z]",
        "!*.svg",
        "[._]*.sw[a-p]",
        "[._]s[a-rt-v][a-z]",
        "[._]ss[a-gi-z]",
        "[._]sw[a-p]"
    ],
    "clion": [
        "# CLion",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        "cmake-build-*/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/misc.xml",
        ".idea/modules.xml",
        ".idea/vcs.xml",
        ".idea/deployment.xml",
        ".idea/remote-targets.xml"
    ],
    "phpstorm": [
        "# PHPStorm",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/php.xml",
        ".idea/phpunit.xml",
        ".idea/composerJson.xml",
        ".idea/php-test-framework.xml",
        ".idea/php-docker-settings.xml"
    ],
    "emacs": [
        "# Emacs temporary files",
        "*~",
        "*#",
        ".#*",
        "*.elc",
        "auto-save-list",
        "tramp",
        ".org-id-locations",
        "*_archive",
        "*_flymake.*",
        "*.rel",
        ".cask/",
        "dist/",
        "flycheck_*.el",
        ".projectile",
        ".dir-locals.el",
        "/.emacs.desktop",
        "/.emacs.desktop.lock",
        "*.elc",
        "auto-save-list",
        ".eshell/",
        "/.sx/",
        "*.eld",
        "/.emacs.d/",
        "/.emacs.d/elpa/",
        "/.emacs.d/auto-save-list/",
        "/.emacs.d/backups/",
        "*.~undo-tree~",
        "*_flymake",
        "/.emacs.d/backup/",
        "/.emacs.d/places",
        "/.emacs.d/url/"
    ],
    "nano": [
        "# Nano temporary files",
        "*.save",
        "*.save.*",
        "*.swp",
        "*.swx",
        "*.tmp",
        "*.nano",
        "*~",
        ".nano.save",
        ".nano.save.*",
        "recovery/*"
    ],
    "vscode": [
        "# Visual Studio Code",
        ".vscode/*",
        "!.vscode/settings.json",
        "!.vscode/tasks.json",
        "!.vscode/launch.json",
        "!.vscode/extensions.json",
        "!.vscode/*.code-snippets",
        ".history/",
        "*.vsix",
        ".ionide",
        ".vs/",
        "*.code-workspace",
        ".vscode-test",
        ".vscodeignore",
        ".vscode/chrome",
        ".vscode-server/",
        ".vscode/sftp.json",
        ".vscode/tags",
        ".devcontainer/"
    ],
    "visual_studio": [
        "# Visual Studio",
        ".vs/",
        "*.suo",
        "*.user",
        "*.userosscache",
        "*.sln.docstates",
        "[Dd]ebug/",
        "[Dd]ebugPublic/",
        "[Rr]elease/",
        "[Rr]eleases/",
        "x64/",
        "x86/",
        "build/",
        "bld/",
        "[Bb]in/",
        "[Oo]bj/",
        "[Ll]og/",
        ".vs/",
        "*.VisualState.xml",
        "TestResult.xml",
        "[Tt]est[Rr]esult*/",
        "[Bb]uild[Ll]og.*",
        "*.VisualState.xml",
        "*.psess",
        "*.vsp",
        "*.vspx",
        "*.sap",
        "ipch/",
        "*.aps",
        "*.ncb",
        "*.opendb",
        "*.opensdf",
        "*.sdf",
        "*.cachefile",
        "*.VC.db",
        "*.VC.VC.opendb",
        "*.coverage",
        "*.coveragexml",
        "_UpgradeReport_Files/",
        "Backup*/",
        "UpgradeLog*.XML",
        "UpgradeLog*.htm",
        "[Ww][Ii][Nn]32/",
        "[Aa][Rr][Mm]/",
        "[Aa][Rr][Mm]64/",
        "[Ll]ogs/",
        "Generated\\ Files/",
        "BenchmarkDotNet.Artifacts/",
        "ScaffoldingReadMe.txt",
        "StyleCopReport.xml",
        "*_wpftmp.csproj",
        ".axoCover/*",
        "!.axoCover/settings.json",
        "coverage*.json",
        "coverage*.xml",
        "coverage*.info",
        ".vshistory/",
        "healthchecksdb"
    ],
    "sublime": [
        "# Sublime Text",
        "*.tmlanguage.cache",
        "*.tmPreferences.cache",
        "*.stTheme.cache",
        "*.sublime-workspace",
        "*.sublime-project",
        "*.sublime-settings",
        "sftp-config.json",
        "Package Control.last-run",
        "Package Control.ca-list",
        "Package Control.ca-bundle",
        "Package Control.system-ca-bundle",
        "Package Control.cache/",
        "Package Control.ca-certs/",
        "Package Control.merged-ca-bundle",
        "Package Control.user-ca-bundle",
        "oscrypto-ca-bundle.crt",
        "bh_unicode_properties.cache",
        "GitHub.sublime-settings"
    ],
    "intellij": [
        "# IntelliJ IDEA and Other JetBrains IDEs",
        ".idea/",
        "*.iml",
        "*.iws",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/shelf/",
        ".idea/contentModel.xml",
        ".idea/dataSources/",
        ".idea/dataSources.xml",
        ".idea/dataSources.ids",
        ".idea/dataSources.local.xml",
        ".idea/sqlDataSources.xml",
        ".idea/dynamic.xml",
        ".idea/uiDesigner.xml",
        ".idea/gradle.xml",
        ".idea/libraries",
        ".idea/deployment.xml",
        ".idea/mongoSettings.xml",
        ".idea/httpRequests",
        ".idea/caches/",
        ".idea/modules.xml",
        ".idea/compiler.xml",
        ".idea/jarRepositories.xml",
        ".idea/artifacts",
        ".idea/sonarlint/",
        "*.iml.bak",
        "*.ipr.bak",
        "*.iws.bak",
        ".idea_backup/",
        ".idea/replstate.xml",
        ".idea/checkstyle-idea.xml",
        ".idea/encodings.xml",
        ".idea/misc.xml",
        ".idea/vcs.xml",
        ".idea/jsLibraryMappings.xml",
        ".idea/assetWizardSettings.xml",
        ".idea/kotlinc.xml",
        ".idea/inspectionProfiles/",
        ".idea/codestream.xml",
        ".idea/aws.xml",
        ".idea/sonarIssues.xml",
        ".idea/.gitignore",
        ".idea/remote-mappings.xml",
        ".idea/**/usage.statistics.xml",
        ".idea/**/contentModel.xml",
        ".idea/**/dbnavigator.xml",
        ".idea/**/markdown-navigator.xml",
        ".idea/**/markdown-navigator-enh.xml",
        ".idea/**/markdown-navigator/",
        ".idea/$CACHE_FILE$",
        ".idea/**/azureSettings.xml",
        "com_crashlytics_export_strings.xml",
        "crashlytics.properties",
        "crashlytics-build.properties",
        "fabric.properties"
    ],
    "eclipse": [
        "# Eclipse",
        ".metadata",
        "bin/",
        "tmp/",
        "*.tmp",
        "*.bak",
        "*.swp",
        "*~.nib",
        "local.properties",
        ".settings/",
        ".loadpath",
        ".recommenders",
        ".project",
        ".externalToolBuilders/",
        "*.launch",
        ".classpath",
        ".factorypath",
        ".buildpath",
        ".target",
        ".tern-project",
        ".springBeans",
        ".recommenders/",
        ".apt_generated/",
        ".apt_generated_test/",
        ".cache-main",
        ".scala_dependencies",
        ".worksheet",
        ".autotools",
        ".cproject",
        ".sts4-cache/",
        ".pydevproject",
        ".texlipse",
        "*_flymake.*"
    ],
    "netbeans": [
        "# NetBeans",
        "nbproject/private/",
        "build/",
        "nbbuild/",
        "dist/",
        "nbdist/",
        "nbactions.xml",
        "nb-configuration.xml",
        ".nb-gradle/",
        "profiles.xml",
        "nbproject/",
        "build.xml",
        "manifest.mf"
    ],
    "xcode": [
        "# Xcode",
        "*.pbxuser",
        "!default.pbxuser",
        "*.mode1v3",
        "!default.mode1v3",
        "*.mode2v3",
        "!default.mode2v3",
        "*.perspectivev3",
        "!default.perspectivev3",
        "xcuserdata/",
        "*.xccheckout",
        "*.moved-aside",
        "DerivedData/",
        "*.hmap",
        "*.ipa",
        "*.xcuserstate",
        "*.xcscmblueprint",
        "*.xcscheme",
        "*.xcworkspacedata",
        "*.xcodeproj/*",
        "!*.xcodeproj/project.pbxproj",
        "!*.xcodeproj/xcshareddata/",
        "!*.xcodeproj/project.xcworkspace/",
        "!*.xcworkspace/contents.xcworkspacedata",
        "**/xcshareddata/WorkspaceSettings.xcsettings",
        "*.xcscmblueprint",
        ".xccheckout",
        "/*.gcno",
        "**/xcshareddata/WorkspaceSettings.xcsettings"
    ],
    "webstorm": [
        "# WebStorm",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/jsLibraryMappings.xml",
        ".idea/watcherTasks.xml",
        ".idea/jsLinters/",
        ".idea/inspectionProfiles/",
        ".idea/codeStyles/"
    ],
    "pycharm": [
        "# PyCharm",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/misc.xml",
        ".idea/modules.xml",
        ".idea/vcs.xml",
        ".idea/jsLibraryMappings.xml",
        ".idea/datasources.xml",
        ".idea/dataSources.ids",
        ".idea/sqlDataSources.xml",
        ".idea/dynamic.xml",
        ".idea/uiDesigner.xml",
        ".idea/inspectionProfiles/"
    ],
    "rubymine": [
        "# RubyMine",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".rakeTasks",
        ".generators",
        ".idea_modules/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/dataSources/",
        ".idea/dataSources.xml",
        ".idea/dataSources.ids",
        ".idea/dataSources.local.xml"
    ],
    "androidstudio": [
        "# Android Studio",
        "*.iml",
        ".gradle",
        "/local.properties",
        "/.idea/caches",
        "/.idea/libraries",
        "/.idea/modules.xml",
        "/.idea/workspace.xml",
        "/.idea/navEditor.xml",
        "/.idea/assetWizardSettings.xml",
        ".DS_Store",
        "/build",
        "/captures",
        ".externalNativeBuild",
        ".cxx",
        "local.properties",
        "*.apk",
        "*.ap_",
        "*.dex",
        "*.class",
        "bin/",
        "gen/",
        "out/",
        ".navigation/",
        "proguard/",
        "*.log",
        ".idea/tasks.xml",
        ".idea/.name",
        ".idea/compiler.xml",
        ".idea/copyright/profiles_settings.xml",
        ".idea/encodings.xml",
        ".idea/misc.xml",
        ".idea/scopes/scope_settings.xml",
        ".idea/vcs.xml",
        "*.iws",
        ".idea_modules/"
    ],
    "atom": [
        "# Atom",
        ".atom/",
        "*.cson",
        ".apm/",
        ".apm/.apmrc",
        ".apm/_locks",
        ".apm/atom-package-*",
        ".node-gyp/",
        "storage/",
        "compile-cache/",
        "dev/",
        ".atom-socket-secret-*"
    ],
    "datagrip": [
        "# DataGrip",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/dataSources/",
        ".idea/dataSources.xml",
        ".idea/dataSources.ids",
        ".idea/dataSources.local.xml",
        ".idea/sqlDataSources.xml",
        ".idea/dynamic.xml",
        ".idea/dbnavigator.xml",
        "*.dbc",
        "*.dbf",
        ".idea/sqldialects.xml",
        ".idea/sbt.xml",
        "consoles/"
    ],
    "rider": [
        "# Rider",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/.idea.*",
        ".idea/indexLayout.xml",
        ".idea/contentModel.xml",
        ".idea/modules.xml",
        ".idea/rider.project.restore.info",
        "_ReSharper*/",
        "*.[Rr]e[Ss]harper",
        "*.DotSettings.user",
        ".idea/shelf/",
        ".idea/config/",
        "riderModule.iml"
    ],
    "goland": [
        "# GoLand",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/goland.xml",
        ".idea/golangProjectSettings.xml",
        ".idea/goLibraries.xml",
        "go.work",
        "go.sum",
        ".idea/goprojector.xml",
        ".idea/go.imports.xml",
        ".idea/go.vendoring.xml"
    ],
    "appcode": [
        "# AppCode",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/xcworkspace",
        ".idea/xcode.xml",
        ".idea/xcuserdata",
        "*.xcworkspace",
        "*.xcodeproj",
        "*.pbxuser",
        "*.mode1v3",
        "*.mode2v3",
        "*.perspectivev3",
        "xcuserdata/"
    ],
    "dataspell": [
        "# DataSpell",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/dataspell.xml",
        ".idea/jupyter-settings.xml",
        ".idea/data-sources.xml",
        "notebooks/.ipynb_checkpoints/",
        ".jupyter/",
        ".ipynb_checkpoints/",
        "*.ipynb_checkpoints.*",
        ".dataspell/"
    ],
    "fleet": [
        "# Fleet",
        ".fleet/",
        "*.fleet",
        ".idea/fleet.xml",
        ".fleet/settings.json",
        ".fleet/run.json",
        "fleet.local.yaml",
        ".fleet-cache/",
        ".fleet/workspace.xml"
    ],
    "mps": [
        "# MPS (JetBrains Meta Programming System)",
        ".mps/",
        "*.mps",
        "*.mpl",
        "*.msd",
        "*.mpr",
        "classes_gen/",
        "source_gen/",
        "source_gen.caches/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        "languages/*/classes_gen/",
        "languages/*/source_gen/",
        "languages/*/source_gen.caches/",
        "solutions/*/classes_gen/",
        "solutions/*/source_gen/",
        "solutions/*/source_gen.caches/"
    ],
    "aqua": [
        "# Aqua",
        ".idea/",
        "*.iws",
        "*.iml",
        "*.ipr",
        ".idea_modules/",
        "out/",
        ".idea/workspace.xml",
        ".idea/tasks.xml",
        ".idea/dictionaries",
        ".idea/aqua.xml",
        "test-output/",
        "reports/",
        ".idea/testResults/",
        "test-results/",
        "aqua-reports/",
        ".aqua/",
        "aqua.config.json",
        "aqua-workspace/"
    ]
},
  "vcs": {
    "git": [
        "# Git",
        ".git/",
        ".gitignore",
        ".gitattributes",
        ".gitmodules",
        ".git-rewrite/",
        "/.git-credentials",
        ".git-blame-ignore-revs",
        "*.git",
        ".gitkeep",
        ".git-old/",
        ".gitconfig",
        ".github/",
        ".gitreview",
        ".gitk",
        ".gitstats",
        ".gitchangelog.rc",
        ".git-blame*",
        ".git-rewrite/",
        ".gitmessage",
        ".gitflow",
        "git.properties",
        ".git-blame-ignore",
        ".gitkeep",
        ".gitattributes.local",
        ".git/lfs/",
        ".git-crypt/",
        ".gitflow.default",
        ".gitlint",
        ".gitversion",
        ".gitsecret/",
        ".git/hooks/",
        ".git-credentials.local"
    ],
    "subversion": [
        "# Subversion (SVN)",
        ".svn/",
        "_svn/",
        "*.svn-base",
        ".svnignore",
        ".svn-work",
        "*.svn-work",
        ".svn/entries",
        ".svn/format",
        ".svn/wc.db",
        ".svn/pristine/",
        ".svn/tmp/",
        "*.merge-left*",
        "*.merge-right*",
        "*.working",
        "*.mine",
        "*.r[0-9]*",
        "*.orig",
        "*.rej",
        ".svn/props/",
        ".svn/prop-base/",
        ".svn/text-base/",
        ".svn/lock/",
        "*.svn*",
        ".svnbridge/",
        "_svn_*"
    ],
    "mercurial": [
        "# Mercurial (Hg)",
        ".hg/",
        ".hgignore",
        ".hgsigs",
        ".hgsub",
        ".hgsubstate",
        ".hgtags",
        ".hgrc",
        ".hgcheck/",
        ".hg_archival.txt",
        "*.orig",
        "*.rej",
        "*.conflict~",
        ".hgmail",
        ".hgeol",
        ".hgflow",
        ".hgbackup/",
        ".hgcache/",
        ".hgdebug",
        ".hgstatus",
        ".hg/store/",
        ".hg/dirstate",
        ".hg/requires",
        ".hg/branch",
        ".hg/cache/",
        "*.hg_archival.txt",
        ".hgrelease"
    ],
    "bazaar": [
        "# Bazaar (Bzr)",
        ".bzr/",
        ".bzrignore",
        ".bzrtags",
        ".bzrmail",
        ".bzrmeta/",
        ".bzrchk",
        ".bzrstat",
        "*.bzr",
        ".bzr.backup/",
        ".bzr.log",
        ".bzr.revno",
        ".bzr.tags",
        ".bzr-builddeb/",
        ".bzrignore.ALL",
        ".bzr-mysql/",
        "bzr-repo/",
        "*.bzrignore"
    ],
    "cvs": [
        "# CVS",
        "CVS/",
        ".cvsignore",
        "**/CVS/",
        ".cvswrappers",
        "*.cvs",
        ",v",
        "*/RCS/",
        "*.RCS",
        "CVSROOT/",
        "*/**/CVS/",
        ".cvsrc",
        ".cvs-submit",
        ".cvs2svn*",
        "*.cvs-base",
        "*.cvs-work",
        ".cvs_unlock",
        "cvs-serv*/"
    ],
    "darcs": [
        "# Darcs",
        "_darcs/",
        ".darcs-temp-mail",
        ".darcsrepo/",
        ".darcs-checksum",
        "*.darcs-backup*",
        ".darcs-conflicts",
        "*.darcs",
        ".darcs-boring",
        ".darcs-refs"
    ],
    "fossil": [
        "# Fossil",
        ".fossil/",
        ".fossil-settings/",
        "*.fossil",
        "_FOSSIL_",
        ".fslckout",
        ".fos/",
        "*.fsl",
        "*.fossil-archive"
    ],
    "perforce": [
        "# Perforce",
        ".p4config",
        ".p4ignore",
        ".p4rc",
        ".p4root",
        ".p4env",
        "p4.settings",
        ".p4tickets",
        ".p4trust",
        "p4clientspec",
        ".p4changelist",
        "*.p4*",
        "p4cache/"
    ],
    "monotone": [
        "# Monotone",
        "_MTN/",
        ".mtn-ignore",
        "*.mtn",
        "monotone/",
        ".mtn-attrs",
        "*.mtn-rev",
        ".mtn-conf"
    ],
    "teamfoundation": [
        "# Team Foundation Version Control (TFVC)",
        "$tf/",
        ".tfignore",
        "*.vspscc",
        "*.vssscc",
        ".tfs-ignore",
        "*.tfstate",
        "localversion.txt",
        ".tfvc-ignore",
        "*.tfvc-ignore",
        "$RECYCLE.BIN/",
        ".vs/",
        "*.vssscc",
        "*.vsarduino.h",
        "*.suo",
        "*.user",
        "*.userosscache",
        "*.sln.docstates"
    ],
    "rcs": [
        "# RCS (Revision Control System)",
        "RCS/",
        "*.rcs",
        ",v",
        "*,v",
        "*.RCS",
        "*.rlog",
        "RCS.lock",
        "*/RCS/*"
    ],
    "clearcase": [
        "# IBM Rational ClearCase",
        "*.mkelem",
        "*.contrib",
        "*.keep",
        "lost+found/",
        "vobs/",
        ".copyarea.dat",
        ".copyarea.db",
        "*.updt",
        "*.tmp",
        "*.cc",
        "*.ctc",
        "*.cs",
        "*.cst",
        "*.ct"
    ],
    "accurev": [
        "# AccuRev",
        ".acignore",
        ".accurev/",
        "*.acpatch",
        "*.acbak",
        ".acws/",
        "AccuRev/",
        "*.aclock"
    ],
    "sourcesafe": [
        "# Visual SourceSafe",
        "vssver2.scc",
        "*.vspscc",
        "*.vss",
        "*.scc",
        "VSS/",
        "vss_db/",
        "srcsafe.ini"
    ]
},
  "build_tools": {
    "gradle": [
        "# Gradle",
        ".gradle/",
        "build/",
        "gradle/",
        "gradlew",
        "gradlew.bat",
        "*.gradle",
        "gradle-app.setting",
        ".gradletasknamecache",
        "gradle.properties",
        "gradle-wrapper.jar",
        "gradle-wrapper.properties",
        ".gradle-cache/",
        "gradle-build/",
        "out/",
        "classes/",
        "*.class",
        "build-cache/",
        ".gradle/buildOutputCleanup/",
        ".gradle/configuration-cache/",
        "gradle/wrapper/",
        "gradle/caches/",
        "gradle/daemon/",
        "gradle/native/",
        "gradle/wrapper/dists/",
        "!gradle-wrapper.jar",
        ".gradle/kotlin-profile/",
        ".gradle/workspace-id.txt",
        ".gradle/notifications/",
        "gradle/verification-metadata.xml",
        "!src/**/build/",  
        "*.hprof"
    ],
    "maven": [
        "# Maven",
        "target/",
        "pom.xml.tag",
        "pom.xml.releaseBackup",
        "pom.xml.versionsBackup",
        "pom.xml.next",
        "release.properties",
        "dependency-reduced-pom.xml",
        "buildNumber.properties",
        ".mvn/timing.properties",
        ".mvn/wrapper/maven-wrapper.jar",
        ".mvn/wrapper/maven-wrapper.properties",
        "mvnw",
        "mvnw.cmd",
        ".m2/",
        "*.war",
        "*.ear",
        "*.jar",
        "*.nar",
        ".project",
        ".classpath",
        ".settings/",
        "maven-status/",
        "maven-archiver/",
        "generated-sources/",
        "generated-test-sources/",
        "maven-compiler-plugin/",
        "maven-metadata.xml",
        "maven-metadata-local.xml",
        ".maven-classpath",
        "*.versionsBackup",
        "maven-eclipse.xml"
    ],
    "cmake": [
        "# CMake",
        "CMakeCache.txt",
        "CMakeFiles/",
        "CMakeScripts/",
        "CMakeTmp/",
        "Testing/",
        "Makefile",
        "cmake_install.cmake",
        "install_manifest.txt",
        "compile_commands.json",
        "CTestTestfile.cmake",
        "_deps/",
        "build/",
        "bin/",
        "lib/",
        "*.cmake",
        "CMakeUserPresets.json",
        "CMakeSettings.json",
        "CMakePresets.json",
        "CMakeLists.txt.user",
        "CMakeDoxyfile.in",
        "CMakeDoxygenDefaults.cmake",
        "_CPack_Packages/",
        "DartConfiguration.tcl",
        "CMakeDoxygen.in",
        "CMakeCache.txt.prev",
        "CMakeLists.txt.user.*",
        "cmake-build-*/",
        "_build/",
        "-prefix/",  
        "CMakeUserPresets.json"
    ],
    "makefile": [
        "# Make",
        "*.o",
        "*.d",
        "*.ko",
        "*.obj",
        "*.elf",
        "*.ilk",
        "*.map",
        "*.exp",
        "*.gch",
        "*.pch",
        "*.lib",
        "*.a",
        "*.la",
        "*.lo",
        "*.dll",
        "*.so",
        "*.so.*",
        "*.dylib",
        "*.exe",
        "*.out",
        "*.app",
        "*.i*86",
        "*.x86_64",
        "*.hex",
        "*.dSYM/",
        "*.su",
        "*.idb",
        "*.pdb",
        "*.mod*",
        "*.cmd",
        ".tmp_versions/",
        "modules.order",
        "Module.symvers",
        "Mkfile.old",
        "dkms.conf",
        ".deps/",
        ".libs/"
    ],
    "ant": [
        "# Apache Ant",
        "build/",
        "dist/",
        "bin/",
        "gen/",
        "out/",
        "build.xml",
        "ant.properties",
        "local.properties",
        "proguard-project.txt",
        "build.properties",
        "*.war",
        "*.ear",
        "*.jar",
        "build-impl.xml",
        "ant-build/",
        "ant-gen/",
        ".ant-targets-build.xml"
    ],
    "bazel": [
        "# Bazel",
        "bazel-bin",
        "bazel-out",
        "bazel-testlogs",
        "bazel-workspace",
        "bazel-*",
        ".bazelrc.user",
        ".bazelignore",
        ".bazel/",
        "*.bazel.rc",
        "*.bazelrc",
        ".bazel-cache/",
        "bazel-out/",
        "compile_commands.json",
        "/.ijwb/",  
        "/.aswb/",  
        "/.clwb/",  
        ".fakebuckversion" 
    ],
    "buck": [
        "# Buck",
        "buck-out/",
        ".buckd/",
        ".buckconfig.local",
        ".buck-cache/",
        "buck-image-out/",
        ".buckversion",
        ".buckconfig",
        "buck-gen/"
    ],
    "sbt": [
        "# SBT (Scala Build Tool)",
        "target/",
        "project/target/",
        "project/project/",
        ".sbt/",
        "*.class",
        "*.log",
        ".cache",
        ".history",
        ".lib/",
        "dist/*",
        "lib_managed/",
        "src_managed/",
        "project/boot/",
        "project/plugins/project/",
        ".scala_dependencies",
        ".worksheet",
        ".bsp/",
        "lib_managed/", 
        "project/boot/", 
        "project/plugins/project/"
    ],
    "cargo": [
        "# Cargo (Rust)",
        "target/",
        "Cargo.lock",
        "**/*.rs.bk",
        "*.rlib",
        "*.rmeta",
        ".cargo-lock",
        ".cargo/",
        "cargo.toml.orig",
        "cargo.toml.bk"
    ],
    "msbuild": [
        "# MSBuild",
        "[Bb]in/",
        "[Oo]bj/",
        "[Dd]ebug/",
        "[Rr]elease/",
        "x64/",
        "x86/",
        "[Bb]uild/",
        "*.user",
        "*.aps",
        "*.pch",
        "*.vspscc",
        "*.vssscc",
        ".builds",
        "*.pidb",
        "*.svclog",
        "*.scc",
        "_UpgradeReport_Files/",
        "Backup*/",
        "UpgradeLog*.XML",
        "UpgradeLog*.htm"
    ],
    "ninja": [
        "# Ninja",
        ".ninja_deps",
        ".ninja_log",
        "build.ninja",
        ".ninja/",
        "*.ninja"
    ],
    "webpack": [
        "# Webpack",
        "dist/",
        "build/",
        ".webpack/",
        "webpack.generated.js",
        "webpack-stats.json",
        "webpack.config.js.bak",
        "webpack-assets.json",
        "webpack.records.json",
        "webpack.*.js",
        ".webpack.*.cache",
        "webpack.config.*.js",
        "webpack.generated.*"
    ],
    "gulp": [
        "# Gulp",
        "gulpfile.js.bak",
        ".gulp-cache/",
        ".gulp/",
        "gulp-cache/",
        "gulp.1",
        "gulpfile.*.js",
        "gulp.config.js",
        ".gulp.*.cache"
    ],
    "grunt": [
        "# Grunt",
        "node_modules/",
        ".grunt/",
        "Gruntfile.js.bak",
        "grunt-config/",
        ".grunt-cache/",
        "Gruntfile.*.js",
        ".grunt-tasks/",
        "grunt.config.js"
    ]
},
  "package_managers": {
    "npm": [
        "# NPM (Node Package Manager)",
        "node_modules/",
        "package-lock.json",
        ".npm/",
        ".node-gyp/",
        "npm-debug.log*",
        ".npmrc",
        ".npm-cache/",
        ".npm-global/",
        ".node_repl_history",
        ".env",
        "npm-shrinkwrap.json",
        ".npmignore",
        ".package-lock.json",
        "npm-debug.log.*",
        ".npm-debug/",
        ".npm-tmp/",
        ".npm-tarball/",
        "node_modules_*",
        ".npm-init.js",
        ".npm-update-notifier",
        ".node_modules.ember-try/",
        ".npm-version",
        ".node_history",
        ".v8flags.*",
        ".babel.json",
        "package.json.bak"
    ],
    "yarn": [
        "# https://yarnpkg.com/getting-started/qa#which-files-should-be-gitignored",
        "# Yarn",
        "yarn.lock",
        ".yarn/",
        ".yarnrc",
        ".yarn-integrity",
        ".yarn-metadata.json",
        "yarn-debug.log*",
        "yarn-error.log*",
        ".yarn-cache/",
        ".yarn/cache",
        ".yarn/unplugged",
        ".yarn/build-state.yml",
        ".yarn/install-state.gz",
        ".pnp.*",
        ".yarnrc.yml",
        ".yarn-update-notifier",
        "yarn.build.json",
        ".yarnpath",
        ".yarn/build",
        ".yarn-metadata",
        "yarn-conditions.yml",
        ".yarn/install-state.gz.tmp",
        "!.yarn/releases",
        "!.yarn/patches",
        "!.yarn/plugins",
        "!.yarn/sdks",
        "!.yarn/versions"
    ],
    "homebrew": [
        "Brewfile.lock.json",
        ".brew/",
        "brew.env",
        ".homebrew-cache/",
        "Brewfile.local"
    ],
    "apt": [
        "*.deb",
        "*.ddeb",
        "*.udeb",
        ".apt_generated/",
        ".apt-cache/",
        "sources.list.d/"
    ],
    "gem": [
        "*.gem",
        ".gem/",
        "gems/",
        "specifications/",
        "gem.build_complete",
        ".gemrc"
    ],
    "pacman": [
        "*.pkg.tar.xz",
        "*.pkg.tar.zst",
        "pacman.db",
        "pacman.files",
        ".pacman/"
    ],
    "yum": [
        "*.rpm",
        "yum.repos.d/",
        ".yum-cache/",
        "repodata/"
    ],
    "chocolatey": [
        ".chocolatey/",
        "*.nupkg",
        "chocolatey.config",
        ".choco-cache/"
    ],
    "scoop": [
        ".scoop/",
        "scoop.json",
        "scoop-cache/"
    ],
    "snap": [
        "snap/",
        "*.snap",
        ".snapcraft/",
        "parts/",
        "prime/",
        "stage/"
    ],
    "flatpak": [
        ".flatpak-builder/",
        "build-dir/",
        ".flatpak/",
        "repo/"
    ],
    "renv": [  
        "renv/",
        "renv.lock",
        ".Rprofile",
        "renv/activate.R"
    ],
    "gomod": [ 
        "go.sum",
        "go.mod",
        "vendor/",
        "go.work",
        "go.work.sum"
    ],
    "swift_package_manager": [
        ".build/",
        "Packages/",
        "Package.resolved",
        ".swiftpm/",
        ".build-cache/"
    ],
    "pnpm": [
        "# PNPM",
        "pnpm-lock.yaml",
        "pnpm-workspace.yaml",
        ".pnpm/",
        ".pnpm-debug.log",
        ".pnpm-store/",
        "pnpm-lock.yaml.bak",
        ".pnpmfile.cjs",
        "node_modules/",
        ".pnpm-cache/"
    ],
    "pipenv": [
        "# Pipenv",
        "Pipfile.lock",
        "Pipfile",
        ".venv/",
        ".env",
        ".python-version",
        "Pipfile.bak",
        ".pipenv/",
        ".pipenv-cache/",
        "pipenv-debug.log",
        ".pipenv.lock.bak",
        "pipenv.lock.bak",
        ".pipenv-shims/",
        ".python-version",
        "requirements.txt.lock"
    ],
    "pip": [
        "# Pip",
        "pip-log.txt",
        "pip-delete-this-directory.txt",
        ".pip-cache/",
        ".pip/",
        "pip-selfcheck.json",
        "requirements.txt.bak",
        ".pip-tmp/",
        ".pip-build/",
        "pip-wheel-metadata/",
        ".pip_cache/"
    ],
    "poetry": [
        "# Poetry",
        "poetry.lock",
        ".poetry/",
        "poetry.toml",
        ".venv/",
        "dist/",
        "poetry/",
        ".poetry-cache/",
        "poetry-debug.log",
        "poetry.lock.bak",
        "pyproject.toml.lock",
        ".venv.bak/"
    ],
    "composer": [
        "# Composer (PHP)",
        "vendor/",
        "composer.lock",
        "composer.phar",
        ".composer/",
        "composer.json.bak",
        "composer/",
        ".php_cs.cache",
        ".phpunit.result.cache",
        "composer-setup.php",
        ".composer-update-check",
        "composer-test-cleanup",
        "composer-temp*/",
        ".composer-cache/"
    ],
    "bundler": [
        "# Bundler (Ruby)",
        "vendor/bundle/",
        ".bundle/",
        "Gemfile.lock",
        ".bundleignore",
        "bundle/",
        ".bundle-cache/",
        ".bundler/",
        "bundler.d/",
        ".gem/",
        "ruby/",
        "bundler_*.gem",
        ".bundler_checksum"
    ],
    "cargo": [
        "# Cargo (Rust)",
        "Cargo.lock",
        "target/",
        ".cargo/",
        "cargo.toml.orig",
        ".crates.toml",
        ".crates2.json",
        ".cargo-ok",
        "cargo-timing*.html",
        ".cargo-cache/",
        "Cargo.lock.old",
        ".crates.toml.lock"
    ],
    "nuget": [
        "# NuGet (.NET)",
        "packages/",
        "*.nupkg",
        "*.nuget.props",
        "*.nuget.targets",
        ".nuget/",
        "project.lock.json",
        "*.nuget.cache",
        ".packages/",
        "global.json",
        ".nuget-packages/",
        "*.nuget.dgspec.json",
        ".nuget-plugins/"
    ],
    "maven": [
        "# Maven",
        ".m2/",
        "repository/",
        ".mvn/",
        "maven/",
        ".maven/",
        "maven-repository/",
        ".maven-cache/",
        "maven-metadata-local.xml",
        ".maven_repos/"
    ],
    "cocoapods": [
        "# CocoaPods (iOS)",
        "Pods/",
        "Podfile.lock",
        ".cocoapods/",
        "*.xcworkspace",
        "Pods.xcodeproj",
        ".pod/",
        "pod-install-checksum",
        ".podinstall.lock",
        "Manifest.lock"
    ],
    "carthage": [
        "# Carthage (iOS)",
        "Carthage/",
        "Cartfile.resolved",
        ".carthage_cache/",
        "Carthage/Build",
        "Carthage/Checkouts"
    ],
    "bower": [
        "# Bower",
        "bower_components/",
        "bower.json",
        ".bower-cache/",
        ".bower-registry/",
        ".bower-tmp/",
        ".bowerrc",
        "bower_packages/"
    ],
    "pub": [
        "# Pub (Dart)",
        ".pub/",
        ".pub-cache/",
        "pubspec.lock",
        ".packages",
        "build/",
        ".dart_tool/",
        ".pub-preload-cache/"
    ],
    "hex": [
        "# Hex (Elixir)",
        "_build/",
        "deps/",
        "mix.lock",
        ".hex/",
        ".mix/",
        ".hex-cache/"
    ],
    "conda": [
        "# Conda",
        "conda-env/",
        ".conda/",
        "env/",
        "venv/",
        ".conda-cache/",
        "conda-meta/",
        "conda-bld/",
        ".condarc",
        "environment.yml.lock"
    ],
    "vcpkg": [
        "# Vcpkg (C++)",
        "vcpkg/",
        "vcpkg_installed/",
        ".vcpkg/",
        "vcpkg-manifest-install.log",
        ".vcpkg-cache/"
    ],
    "conan": [
        "# Conan (C++)",
        "conan.lock",
        "conanbuildinfo.*",
        "conaninfo.txt",
        "CMakeUserPresets.json",
        ".conan/",
        "conan_imports_manifest.txt",
        "graph_info.json",
        "Find*.cmake", 
        "conan_paths.*",
        "activate_run.ps1",
        "activate_run.sh",
        "deactivate_run.ps1",
        "deactivate_run.sh",
        "environment_run.ps1.env",
        "environment_run.sh.env"
    ]
},
  "security_and_credentials": {
    "credentials": [
        "# Environment Variables and Configuration",
        ".env",
        ".env.local",
        ".env.*.local",
        ".env.development",
        ".env.test",
        ".env.production",
        ".env.backup",
        ".env.save",
        ".env.bak",
        "*.env",
        ".env-*",
        "env.json",
        "config.json",
        "secrets.json",
        "credentials.json",
        "secret.json",
        "settings.json",
        ".credentials",
        ".secret",
        
        "# API Keys and Tokens",
        "*.api",
        "*.apikey",
        "api_key",
        "api_secret",
        "*.token",
        "token.*",
        "access_token*",
        "auth_token*",
        "*.oauth",
        "oauth.*",
        "oauth_token.*",
        
        "# Certificates and Keys",
        "*.key",
        "*.pem",
        "*.crt",
        "*.cer",
        "*.der",
        "*.pfx",
        "*.p12",
        "*.keystore",
        "*.jks",
        "*.p7b",
        "*.p7c",
        "*.csr",
        "*.spc",
        "*.cert",
        "*.ssl",
        "private.*",
        "public.*",
        "*.priv",
        "*.pub",
        "*.secret",
        
        "# Database Credentials",
        "*.db_password",
        "database.yml",
        "database.json",
        "db.config",
        "db.json",
        "db.yml",
        "sequelize.json",
        "*.sqlite",
        "mongod.conf",
        "redis.conf",
        
        "# Cloud Service Credentials",
        "aws.json",
        "aws.yml",
        "aws_credentials",
        "credentials.csv",
        "google-services.json",
        "googlecloud.json",
        "azure.json",
        "*.azureauth",
        "firebase.json",
        "firebaserc",
        
        "# Authentication Files",
        "auth.json",
        "auth.config",
        "authentication.json",
        "*.auth",
        "*.login",
        "passwd",
        "passwords.txt",
        "htpasswd",
        "*.htpasswd",
        
        "# Backup Files",
        "*.key.bak",
        "*.pem.bak",
        "*.crt.bak",
        ".env.bak",
        "*.backup",
        "*.secret.bak",
        "backup-*.key"
    ],
    "ssh_keys": [
        "# SSH Keys",
        "id_rsa",
        "id_rsa.pub",
        "id_dsa",
        "id_dsa.pub",
        "id_ecdsa",
        "id_ecdsa.pub",
        "id_ecdsa_sk",
        "id_ecdsa_sk.pub",
        "id_ed25519",
        "id_ed25519.pub",
        "id_ed25519_sk",
        "id_ed25519_sk.pub",
        "identity",
        "identity.pub",
        "*.pem",
        "authorized_keys",
        "known_hosts",
        "config",
        "*.ssh",
        ".ssh/",
        "ssh_config",
        "sshd_config",
        "ssh_host_*_key",
        "ssh_host_*_key.pub",
        ".ssh/id_*",
        ".ssh/*.private",
        ".ssh/*.public",
        "*.ppk",
        "putty.log"
    ],
    "encryption_keys": [
        "# Encryption Keys",
        "*.key",
        "*.keyring",
        "*.gpg",
        "*.pgp",
        "*.asc",
        "*.kbx",
        "secring.*",
        "pubring.*",
        "trustdb.gpg",
        "*.kbx~",
        "*.key~",
        "private.key",
        "public.key",
        "master.key",
        "*.private",
        "*.public",
        "encryption.key",
        "decryption.key"
    ],
    "certificates": [
        "# SSL/TLS Certificates",
        "*.crt",
        "*.cer",
        "*.ca-bundle",
        "*.p7b",
        "*.p7c",
        "*.p7s",
        "*.pfx",
        "*.p12",
        "cacert.pem",
        "cert.pem",
        "server.crt",
        "client.crt",
        "ca.crt",
        "ssl.crt",
        "*.chain",
        "chain.pem",
        "fullchain.pem",
        "certificate.pem",
        "selfsigned.*"
    ],
    "authentication_tokens": [
        "# Authentication Tokens",
        "*.token",
        "token.*",
        ".token",
        "auth.token",
        "jwt.token",
        "bearer.token",
        "oauth.token",
        "access.token",
        "refresh.token",
        "session.token",
        "*.jwt",
        "*.oauth2",
        "*.refresh",
        ".credentials",
        "credentials.*",
        "auth_config.*"
    ],
    "password_files": [
        "# Password Files",
        "*.pwd",
        "*.passwd",
        "passwords.txt",
        "passwords.json",
        "passwords.yml",
        "passwords.yaml",
        "passwords.csv",
        "*.htpasswd",
        ".htaccess",
        "shadow",
        "passwd",
        "*.password",
        "password.*",
        "secrets.*",
        "*.secret"
    ],
    "signing_keys": [
        "# Code Signing Keys",
        "*.keystore",
        "*.jks",
        "*.p12",
        "signing.properties",
        "signing_key.json",
        "signing-key.*",
        "codesign.*",
        "*.mobileprovision",
        "*.provisionprofile",
        "*.cer",
        "signing.keychain",
        "*.sign",
        "signingkey.*"
    ],
    "hardware_security": [
        "# Hardware Security Module Files",
        "*.hsm",
        "hsm.conf",
        "hsm.key",
        "hsm.cert",
        "hsm_config.*",
        "yubikey.*",
        "*.tpm",
        "tpm.conf"
    ],
    "biometric": [
        "# Biometric Data Files",
        "*.bio",
        "*.biometric",
        "fingerprint.*",
        "face_id.*",
        "biometric.dat",
        "bio_config.*"
    ],
    "mfa": [
        "# Multi-Factor Authentication",
        "*.2fa",
        "2fa.*",
        "mfa.*",
        "*.mfa",
        "totp.*",
        "*.totp",
        "authenticator.*",
        "2factor.*"
    ]
},
  "game_engines": {
    "unreal_engine": [
        "# Unreal Engine Generated Files",
        "Binaries/",
        "Build/",
        "Debug/",
        "DerivedDataCache/",
        "Intermediate/",
        "Saved/",
        "Content/StarterContent/",
        
        "# Visual Studio Files",
        ".vs/",
        "*.VC.db",
        "*.opensdf",
        "*.opendb",
        "*.sdf",
        "*.sln",
        "*.suo",
        "*.xcodeproj",
        "*.xcworkspace",
        
        "# Unreal Generated Solution Files",
        "*.sln",
        "*.xcodeproj/",
        "Makefile",
        "CMakeLists.txt",
        
        "# Cache files",
        "*.pdb",
        "*.dll.response",
        "*.modules",
        
        "# Crash logs",
        "Crashes/",
        "*.log",
        "*.dmp",
        
        "# Configuration files",
        "Config/DefaultEngine.ini",
        "Config/DefaultGame.ini",
        "Config/DefaultInput.ini",
        
        "# Plugin specific",
        "Plugins/*/Intermediate/",
        "Plugins/*/Binaries/",
        "Plugins/*/Saved/",
        
        "# Platform specific",
        "WindowsNoEditor/",
        "LinuxNoEditor/",
        "MacNoEditor/",
        
        "# Package files",
        "*.pak",
        "*.exe",
        "*.app",
        
        "# Asset files to ignore",
        "*.uasset.bak",
        "*.umap.bak",
        "*.bak",
        "Backup*/"
    ],
    "unity": [
        "# Unity Generated",
        "[Ll]ibrary/",
        "[Tt]emp/",
        "[Oo]bj/",
        "[Bb]uild/",
        "[Bb]uilds/",
        "[Ll]ogs/",
        "[Uu]ser[Ss]ettings/",
        
        "# MemoryCaptures can get excessive in size",
        "[Mm]emoryCaptures/",
        
        "# Asset meta data should only be ignored when the corresponding asset is also ignored",
        "!/[Aa]ssets/**/*.meta",
        
        "# Visual Studio cache directory",
        ".vs/",
        
        "# Gradle cache directory",
        ".gradle/",
        
        "# Autogenerated VS/MD/Consulo solution and project files",
        "ExportedObj/",
        ".consulo/",
        "*.csproj",
        "*.unityproj",
        "*.sln",
        "*.suo",
        "*.tmp",
        "*.user",
        "*.userprefs",
        "*.pidb",
        "*.booproj",
        "*.svd",
        "*.pdb",
        "*.mdb",
        "*.opendb",
        "*.VC.db",
        
        "# Unity3D generated meta files",
        "*.pidb.meta",
        "*.pdb.meta",
        "*.mdb.meta",
        
        "# Unity3D generated file on crash reports",
        "sysinfo.txt",
        
        "# Builds",
        "*.apk",
        "*.aab",
        "*.unitypackage",
        "*.app",
        
        "# Crashlytics generated file",
        "crashlytics-build.properties",
        
        "# Packed Addressables",
        "/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*",
        
        "# Temporary auto-generated Android Assets",
        "/[Aa]ssets/[Ss]treamingAssets/aa.meta",
        "/[Aa]ssets/[Ss]treamingAssets/aa/*"
    ],
    "godot": [
        "# Godot-specific ignores",
        ".import/",
        "export.cfg",
        "export_presets.cfg",
        
        "# Imported translations (automatically generated from CSV files)",
        "*.translation",
        
        "# Mono-specific ignores",
        ".mono/",
        "data_*/",
        
        "# Build directories",
        "build/",
        "builds/",
        "export/",
        
        "# Project settings",
        ".godot/",
        "*.import",
        
        "# Cache files",
        ".sconsign.dblite",
        
        "# Editor files",
        "*.tmp",
        "*.swp",
        "*~",
        
        "# System/tool-specific ignores",
        ".DS_Store",
        "Thumbs.db",
        ".directory",
        
        "# Android build files",
        "android/build/*",
        "*.apk",
        "*.aab",
        
        "# iOS build files",
        "*.ipa",
        
        "# Debug files",
        "*.debug",
        "*.dSYM"
    ],
    "cryengine": [
        "# CryEngine specific",
        "Build/",
        "Solutions/",
        "user/",
        "cache/",
        "GameSDK/",
        "Tools/",
        
        "# Log files",
        "LogBackups/",
        "*.log",
        
        "# Build files",
        "*.dll",
        "*.exe",
        "*.pdb",
        "*.ilk",
        "*.exp",
        "*.lib",
        
        "# Engine files",
        "*.cfg",
        "*.dds",
        "*.pak",
        
        "# Project files",
        "*.sln",
        "*.vcxproj",
        "*.vcxproj.filters",
        "*.vcxproj.user"
    ],
    "lumberyard": [
        "# Amazon Lumberyard specific",
        "Cache/",
        "BinTemp/",
        "Bin64*/",
        "user/",
        "logs/",
        
        "# Asset processing",
        "AssetProcessorTemp/",
        "AssetProcessorCache/",
        
        "# Build files",
        "*.pyc",
        "*.pyo",
        "*.ilk",
        "*.exp",
        "*.lib",
        "*.pdb",
        
        "# Project files",
        "*.sln",
        "*.vcxproj",
        "*.vcxproj.filters",
        "*.project"
    ],
    "gamemaker": [
        "# GameMaker Studio 2 specific",
        "options/",
        "cache/",
        "backups/",
        "datafiles_yy/",
        
        "# Build files",
        "*.win",
        "*.exe",
        "*.exe.config",
        "*.apk",
        "*.yyc",
        
        "# Temporary files",
        "*.yy.bak",
        "Configs/*.json"
    ],
    "rpg_maker": [
        "# RPG Maker specific",
        "Game.rpgproject",
        "save/",
        "backup/",
        
        "# Build files",
        "*.exe",
        "*.zip",
        "*.rvdata2",
        "*.rpgmvp",
        "*.rpgmvo",
        "*.rpgmvm"
    ],
    "construct": [
        "# Construct specific",
        "*.capx.backup*",
        "*.caproj.backup*",
        "*.caproj.autosave*",
        "*.capx.autosave*",
        "backups/",
        "previews/"
    ],
    "phaser": [
        "# Phaser specific",
        "dist/",
        "build/",
        "node_modules/",
        "*.js.map",
        "*.min.js"
    ],
    "cocos2d": [
        "# Cocos2d specific",
        "library/",
        "temp/",
        "local/",
        "build/",
        "profiles/",
        
        "# Build files",
        "*.apk",
        "*.ipa",
        
        "# Project files",
        "*.ccs",
        "*.udf"
    ],
    "source_engine": [
        "# Source Engine specific",
        "*.vpk",
        "*.bsp",
        "*.vmf.bak",
        "*.log",
        "*.prt",
        "*.vmx",
        "compiled/*",
        "cache/*"
    ],
    "frostbite": [
        "# Frostbite Engine specific",
        "Cache/",
        "Temp/",
        "Logs/",
        "Build/",
        "*.sb",
        "*.fb",
        "*.dbx"
    ]
},
  "data_science": {
    "jupyter": [
        "# Jupyter Notebooks",
        ".ipynb_checkpoints/",
        "*/.ipynb_checkpoints/*",
        "*.ipynb_checkpoints.*",
        
        "# Jupyter Notebook temp files",
        ".jupyter/",
        "jupyter_notebook_config.*",
        "jupyter_notebook_config.json",
        "jupyter_notebook_config.py",
        "jupyter_server_config.*",
        
        "# Jupyter Lab",
        ".jupyterlab-config",
        ".jupyterlab/",
        "jupyterlab-workspace.json",
        "labconfig/",
        "lab/",
        
        "# Jupyter Cache and Metadata",
        ".jupyter-cache/",
        "*.jupyterlite.json",
        "*.jupytext",
        "*.jupytext.py",
        ".jupytext.toml",
        ".jupytext.yml",
        
        "# Notebook conversions",
        "*.nbconvert.ipynb",
        "*.nbconvert/",
        "*.html",
        "*.pdf",
        "*.slides.html",
        
        "# Virtual Environments",
        ".env",
        "venv/",
        "ENV/",
        
        "# Data files (often large)",
        "*.csv",
        "*.dat",
        "*.pickle",
        "*.pkl",
        "*.h5",
        "*.hdf5",
        
        "# Output and visualization files",
        "plots/",
        "figures/",
        "output/",
        "results/",
        "*.png",
        "*.jpg",
        "*.svg",
        
        "# Temporary and cache files",
        "__pycache__/",
        "*.py[cod]",
        "*$py.class",
        ".pytest_cache/",
        ".coverage"
    ],
    "rstudio": [
        "# RStudio files",
        ".Rproj.user/",
        "*.Rproj",
        ".Rhistory",
        ".RData",
        ".Ruserdata",
        ".Rapp.history",
        ".RDataTmp",
        ".Rprofile",
        
        "# R Environment Variables",
        ".Renviron",
        ".Renviron.site",
        ".Rprofile.site",
        
        "# R Package files",
        "*.tar.gz",
        "*.Rcheck/",
        "vignettes/*.html",
        "vignettes/*.pdf",
        ".httr-oauth",
        
        "# R Markdown files",
        "*.knit.md",
        "*.utf8.md",
        "*_cache/",
        "/cache/",
        "*.html",
        "*.pdf",
        "*.docx",
        
        "# R Package building files",
        "src/*.o",
        "src/*.so",
        "src/*.dll",
        "src-i386/",
        "src-x64/",
        
        "# R documentation",
        "man/*.Rd",
        "NAMESPACE",
        "Meta/",
        
        "# R test files",
        "tests/testthat/Rplots.pdf",
        "tests/testthat/*.RData",
        "tests/testthat/*.rds",
        
        "# R data files",
        "*.RData",
        "*.rda",
        "*.rds",
        "*.rdb",
        "*.rdx",
        
        "# R Shiny",
        "rsconnect/",
        "shiny/*.dcf",
        
        "# R Project specific files",
        "renv/",
        "renv.lock",
        ".renvignore",
        
        "# R Temporary files",
        ".Random.seed",
        "*-Ex.R",
        "*.timings"
    ],
    "spyder": [
        "# Spyder project settings",
        ".spyderproject",
        ".spyproject/",
        "*.spydata",
        ".spyderworkspace",
        ".spyder-py3/"
    ],
    "anaconda": [
        "# Anaconda specific",
        "anaconda-client-env/",
        ".anaconda/",
        "*.conda",
        "conda-env/",
        ".conda/",
        "*.condaenv",
        "environment.yml",
        "environment.yaml",
        ".condarc"
    ],
    "sagemath": [
        "# SageMath specific",
        "*.sage.py",
        ".sage/",
        "*.sagetex.sage",
        "*.sagetex.py",
        "*.sagetex.scmd",
        ".ipynb_checkpoints/"
    ],
    "matlab": [
        "# MATLAB specific",
        "*.asv",
        "*.m~",
        "*.mex*",
        "*.mlappinstall",
        "*.mltbx",
        "helpsearch*/",
        "slprj/",
        "sccprj/",
        "codegen/",
        "*.autosave",
        "*.slxc"
    ],
    "octave": [
        "# GNU Octave specific",
        "octave-workspace",
        "*.oct",
        "*.mat",
        "*.o",
        "*.log"
    ],
    "scilab": [
        "# Scilab specific",
        "*.bin",
        "*.sci~",
        "*.sce~",
        "TMPDIR/"
    ],
    "tableau": [
        "# Tableau specific",
        "*.twb",
        "*.twbr",
        "*.tde",
        "*.tdm",
        "*.hyper",
        "Repository/",
        "Datasources/",
        "*.tbm",
        "*.tbs"
    ],
    "powerbi": [
        "# Power BI specific",
        "*.pbix",
        "*.pbit",
        "*.pbd",
        "*.pbids",
        "*.pdf",
        "*.xlsx"
    ],
    "knime": [
        "# KNIME specific",
        ".metadata/",
        "*.knwf",
        "*.knime",
        "workflow.knime",
        "*.log",
        "data/*.csv",
        "data/*.xlsx"
    ],
    "rapidminer": [
        "# RapidMiner specific",
        "*.rmp",
        "*.properties",
        "*.log",
        "repositories/"
    ],
    "databricks": [
        "# Databricks specific",
        "*.dbc",
        "*.dbfs",
        "*.pyc",
        "*.log",
        "dbfs:/",
        ".databricks/"
    ],
    "google_colab": [
        "# Google Colab specific",
        "*.ipynb",
        "*.pyc",
        "drive/",
        "sample_data/",
        ".config/"
    ],
    "kaggle": [
        "# Kaggle specific",
        "*.csv",
        "*.zip",
        "*.json",
        "input/",
        "working/",
        "temp/",
        "*.kaggle"
    ],
    "tensorflow": [
        "# TensorFlow specific",
        "checkpoint",
        "*.ckpt",
        "*.pb",
        "*.pbtxt",
        "events.out.tfevents.*",
        "graph.pbtxt",
        "model.ckpt.*",
        "saved_model/",
        "tensorboard/"
    ],
    "pytorch": [
        "# PyTorch specific",
        "*.pt",
        "*.pth",
        "*.th",
        "lightning_logs/",
        "runs/",
        "wandb/",
        "checkpoints/"
    ]
},
  "cloud_providers": {
    "aws": [
        "# AWS Credentials and Config",
        ".aws/",
        "aws.config",
        "credentials",
        "*.pem",
        "*.ppk",
        "*.cer",
        "*.p12",
        "*.pfx",
        "aws-credentials.json",
        ".aws-sam/",
        "samconfig.toml",
        
        "# AWS CLI",
        ".aws/credentials",
        ".aws/config",
        ".aws/cli/cache/",
        "aws-config.json",
        "aws-credentials.ini",
        
        "# AWS CDK",
        "cdk.out/",
        "cdk.context.json",
        "cdk-outputs.json",
        ".cdk.staging/",
        "*.cdk.json",
        
        "# AWS SAM",
        ".aws-sam/",
        "samconfig.toml",
        ".sam/",
        "template.yaml",
        "template.yml",
        
        "# AWS Amplify",
        "amplify/",
        ".amplifyrc",
        "amplify.json",
        "team-provider-info.json",
        "aws-exports.js",
        
        "# AWS CloudFormation",
        "*.template",
        "*.template.json",
        "*.stack.json",
        "cloudformation.json",
        "cloudformation.yaml",
        "cloudformation.yml",
        
        "# AWS Elastic Beanstalk",
        ".elasticbeanstalk/",
        "*.cfg.yml",
        ".ebextensions/",
        ".ebignore",
        
        "# AWS Lambda",
        "lambda.zip",
        "function.zip",
        "*.lambda-package.zip",
        
        "# AWS Secrets",
        "*.aws-secrets.json",
        "secrets.json",
        "aws-keys.json",
        
        "# AWS Logs",
        "aws-logs/",
        "cloudwatch/",
        "*.log",
        
        "# AWS Local Development",
        ".localstack/",
        "localstack/",
        "docker-compose.localstack.yml",

        "# AWS DynamoDB Local",
        ".dynamodb/",
        
        "# AWS SSO",
        ".sso/",
        ".aws/sso/cache/",
      
        "# AWS AppSync",
        ".appsync/",
        
        "# AWS CodeBuild",
        "buildspec.yml",
        
        "# AWS CodePipeline",
        "pipeline.yml",
        
        "# AWS ECS",
        "ecs-params.yml",
        
        "# AWS Systems Manager",
        ".ssm/",
        
        "# AWS WorkSpaces",
        ".workspaces/"
    ],
    "gcp": [
        "# Google Cloud Platform Credentials",
        "*.json",
        "gcloud/",
        "credentials.json",
        "client_secrets.json",
        "service-account.json",
        "service-account-key.json",
        "application_default_credentials.json",
        ".config/gcloud/",
        
        "# GCP CLI",
        ".boto",
        ".boto.cfg",
        ".botocfg",
        "cloud_sql_proxy",
        "gcloud.config",
        
        "# GCP App Engine",
        "app.yaml",
        "cron.yaml",
        "dispatch.yaml",
        "index.yaml",
        "queue.yaml",
        ".gcloudignore",
        
        "# GCP Functions",
        "functions/",
        ".functions/",
        "*.function-source.zip",
        
        "# GCP Kubernetes Engine",
        "kubeconfig",
        ".kube/",
        "*.kubeconfig",
        
        "# GCP Terraform",
        "terraform.tfstate",
        "terraform.tfstate.backup",
        ".terraform/",
        "*.tfvars",
        
        "# GCP Development",
        ".cloudsdk/",
        "cloud_env/",
        "gcp-env/",
        
        "# GCP Secrets",
        "*-credentials.json",
        "*-key.json",
        "secrets/",
        
        "# GCP Logs",
        "stackdriver/",
        "cloud-logs/",

        "# GCP Cloud Build",
        "cloudbuild.yaml",
        
        "# GCP Cloud Run",
        "service.yaml",
        
        "# GCP Firestore",
        ".firebaserc",
        "firebase.json",
        
        "# GCP BigQuery",
        "*.bq",
        
        "# GCP Datastore",
        "datastore-indexes.yaml",
        
        "# GCP Cloud Storage",
        ".gsutil/"
    ],
    "azure": [
        "# Azure Credentials",
        ".azure/",
        "azure.json",
        "azureauth.json",
        "*.publishsettings",
        "*.azureprofile.json",
        "AzureRmContext.json",
        
        "# Azure CLI",
        ".azure-config/",
        "azure.cfg",
        ".azurecli/",
        "azurecli.json",
        
        "# Azure Functions",
        "local.settings.json",
        "bin/",
        "obj/",
        "*.functions.zip",
        
        "# Azure App Service",
        ".deployment",
        ".vscode/settings.json",
        "*.pubxml",
        "*.pubxml.user",
        
        "# Azure DevOps",
        ".azure-pipelines/",
        "azure-pipelines.yml",
        ".azure-pipelines-ci.yml",
        
        "# Azure Storage",
        "*.azurite/",
        "azurite-debug.log",
        "__blobstorage__/",
        "__queuestorage__/",
        "__azurite_db*__.json",
        
        "# Azure Kubernetes Service",
        ".kube/",
        "kubeconfig*",
        "*.aks.yaml",
        
        "# Azure Service Fabric",
        ".sfctl/",
        "pkg/",
        
        "# Azure Development",
        ".vs/",
        "*.cscfg",
        "*.csdef",
        "*.cspkg",
        
        "# Azure Secrets",
        "*.pfx",
        "*.p12",
        "*.key",
        "*.pem",
        "*.arm",
        
        "# Azure Templates",
        "*.json.template",
        "*.parameters.json",
        "azuredeploy.json",
        "azuredeploy.parameters.json",
        
        "# Azure Logs",
        "ApplicationInsights/",
        "LogFiles/",
        "diagnostics/",
        
        "# Azure IoT",
        ".iot/",
        "iot-edge/",
        "config/",
        
        "# Azure Machine Learning",
        ".amlignore",
        ".amlservice/",
        "aml_config/",
        "outputs/",

        "# Azure Cosmos DB",
        ".cosmosdb/",
        
        "# Azure Service Bus",
        ".servicebus/",
        
        "# Azure Event Hubs",
        ".eventhubs/",
        
        "# Azure Container Registry",
        ".acr/",
        
        "# Azure Active Directory",
        ".aad/",
        
        "# Azure Monitor",
        ".monitor/",
        
        "# Azure CDN",
        ".cdn/"
    ],
    "oracle_cloud": [
        "# Oracle Cloud Infrastructure",
        ".oci/",
        "*.oci.json",
        "config",
        "oci_config",
        "*.pem",
        "*.key",
        "*.cert"
    ],
    "ibm_cloud": [
        "# IBM Cloud",
        ".bluemix/",
        ".ibm-project",
        "ibm-credentials.env",
        ".ibmcloud/",
        "*.ibmcloud.json",
        "vcap-local.json"
    ],
    "digitalocean": [
        "# DigitalOcean",
        ".digitalocean/",
        "*.digitalocean.json",
        "droplet-config/",
        "doctl/",
        ".doctl/"
    ],
    "heroku": [
        "# Heroku",
        ".heroku/",
        "heroku.json",
        ".env",
        "Procfile.local",
        ".heroku-cli",
        "*.heroku.json"
    ],
    "alibaba_cloud": [
        "# Alibaba Cloud",
        ".aliyun/",
        "aliyun.json",
        "*.aliyun.conf",
        "credentials-aliyun.json"
    ],
    "cloudflare": [
        "# Cloudflare",
        ".cloudflare/",
        "cloudflare.json",
        ".cloudflare.conf",
        "*.cloudflare.key",
        "*.cloudflare.cert"
    ],
    "linode": [
        "# Linode",
        ".linode/",
        "linode-cli.token",
        "*.linode.json",
        "linode-config/"
    ],
    "vultr": [
        "# Vultr",
        ".vultr/",
        "vultr.json",
        "*.vultr.conf",
        "vultr-config/"
    ]
},
  "cicd_tools": {
    "jenkins": [
        "# Jenkins Configuration",
        "*.jenkinsfile",
        "Jenkinsfile",
        "Jenkinsfile.*",
        ".jenkins/",
        "jenkins/",
        "jenkins.yaml",
        "jenkins.yml",
        "jenkins.json",
        "jenkins.properties",
        "jenkins-config/",
        
        "# Jenkins Workspace",
        "workspace/",
        ".jenkins-workspace/",
        "jenkins_home/",
        "builds/",
        
        "# Jenkins Credentials",
        "credentials.xml",
        "*.credentials",
        "identity.key.enc",
        "master.key",
        "hudson.util.Secret",
        "secrets/",
        "*.pfx",
        "*.p12",
        
        "# Jenkins Plugins",
        "plugins/",
        "plugin-configs/",
        "*.hpi",
        "*.jpi",
        
        "# Jenkins Logs",
        "*.log",
        "logs/",
        "log/",
        "*.log.*",
        "jenkins_logs/",
        
        "# Jenkins Build Artifacts",
        "archive/",
        "artifacts/",
        "*.war",
        "*.ear",
        "*.jar",
        "*.zip",
        
        "# Jenkins Cache",
        ".cache/",
        "cache/",
        ".gradle/",
        ".m2/",
        ".npm/",
        
        "# Jenkins Reports",
        "reports/",
        "test-results/",
        "coverage/",
        "jacoco/",
        "junit/",
        "htmlreports/",
        
        "# Jenkins Scripts",
        "groovy/",
        "*.groovy",
        "*.gradle",
        "init.groovy.d/",
        
        "# Jenkins Backup",
        "backup/",
        "*.bak",
        "*.backup",
        "jenkins_backup/"
    ],
    "github_actions": [
        "# GitHub Actions Workflows",
        ".github/workflows/",
        ".github/actions/",
        ".github/workflows/*.yml",
        ".github/workflows/*.yaml",
        
        "# GitHub Actions Configuration",
        ".github/action.yml",
        ".github/action.yaml",
        ".github/dependabot.yml",
        ".github/dependabot.yaml",
        
        "# GitHub Actions Environment",
        ".github/env/",
        ".env.ci",
        ".env.github-actions",
        
        "# GitHub Actions Secrets",
        ".github/secrets/",
        "*.gpg",
        "*.asc",
        
        "# GitHub Actions Cache",
        ".actions-cache/",
        ".github-cache/",
        
        "# GitHub Actions Artifacts",
        "artifacts/",
        "dist/",
        "build/",
        
        "# GitHub Actions Logs",
        "*.log",
        "action-logs/",
        "runner-logs/",
        
        "# GitHub Actions Local Testing",
        "act.env",
        ".actrc",
        "act-secrets.env",
        
        "# GitHub Actions Scripts",
        "scripts/",
        "action-scripts/",
        "*.sh",
        "*.ps1",
        
        "# GitHub Actions Runtime",
        ".runner",
        ".tool-versions",
        ".github/runners/"
    ],
    "gitlab_ci": [
        "# GitLab CI/CD",
        ".gitlab-ci.yml",
        ".gitlab/",
        "gitlab-ci/",
        ".gitlab-ci/",
        "ci/",
        ".gitlab-ci.yml.bak",
        
        "# GitLab Runner",
        ".gitlab-runner/",
        "config.toml",
        ".runner_system",
        
        "# GitLab Cache",
        ".gitlab-cache/",
        "cache/",
        
        "# GitLab Artifacts",
        "artifacts/",
        ".gitlab-artifacts/",
        
        "# GitLab Pages",
        "public/",
        ".gitlab-pages/"
    ],
    "circle_ci": [
        "# CircleCI Configuration",
        ".circleci/",
        "circle.yml",
        ".circleci/config.yml",
        ".circleci/config.yaml",
        
        "# CircleCI Local",
        ".circleci-local/",
        "process.yml",
        
        "# CircleCI Cache",
        ".circleci-cache/",
        ".circle-cache/"
    ],
    "travis_ci": [
        "# Travis CI",
        ".travis.yml",
        ".travis/",
        ".travis.yaml",
        ".travis-data/",
        
        "# Travis Cache",
        ".travis-cache/",
        ".travis-build/"
    ],
    "azure_devops": [
        "# Azure DevOps",
        "azure-pipelines.yml",
        ".azure-pipelines/",
        ".azure-pipelines-ci.yml",
        "azure-pipelines/",
        
        "# Azure DevOps Build",
        ".azure-devops/",
        "build-pipeline.yml",
        "release-pipeline.yml",
        
        "# Azure DevOps Artifacts",
        ".artifacts/",
        "drop/"
    ],
    "bitbucket_pipelines": [
        "# Bitbucket Pipelines",
        "bitbucket-pipelines.yml",
        ".bitbucket/",
        "bitbucket/",
        
        "# Bitbucket Cache",
        ".bitbucket-cache/",
        "pipeline-cache/"
    ],
    "teamcity": [
        "# TeamCity",
        ".teamcity/",
        "teamcity-build/",
        "teamcity-settings/",
        ".BuildServer/",
        
        "# TeamCity Configs",
        "*.tcproj",
        "*.tcproj.user",
        "*.tcproj.meta"
    ],
    "bamboo": [
        "# Bamboo",
        "bamboo-specs/",
        ".bamboo/",
        "bamboo-data/",
        
        "# Bamboo Artifacts",
        "bamboo-artifacts/",
        ".bamboo-artifacts/"
    ],
    "codeship": [
        "# Codeship",
        "codeship-services.yml",
        "codeship-steps.yml",
        ".codeship/",
        "jet-services.yml",
        "jet-steps.yml"
    ],
    "drone": [
        "# Drone CI",
        ".drone.yml",
        ".drone.yaml",
        ".drone/",
        ".drone.sec",
        ".drone.sec.asc"
    ],
    "appveyor": [
        "# AppVeyor",
        "appveyor.yml",
        ".appveyor.yml",
        "appveyor/",
        ".appveyor/"
    ],
    "buildkite": [
        "# Buildkite",
        ".buildkite/",
        "buildkite.yml",
        "buildkite.json",
        ".buildkite-agent/"
    ],
    "concourse": [
        "# Concourse",
        "pipeline.yml",
        ".concourse/",
        "concourse/",
        "ci/pipelines/"
    ],
    "gocd": [
        "# GoCD",
        ".gocd/",
        "gocd-config/",
        "*.gocd.yaml",
        "*.gocd.yml"
    ],
    "semaphore": [
        "# Semaphore",
        ".semaphore/",
        "semaphore.yml",
        ".semaphore.yml",
        "semaphore-cache/"
    ]
}
}
